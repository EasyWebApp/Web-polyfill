{"mappings":"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","sources":["node_modules/@parcel/runtime-js/lib/runtime-ad94e8155cb7b1aa.js","node_modules/@parcel/runtime-js/lib/runtime-2154863c559b5f66.js","src/config.js","src/FileSystemDirectoryHandle.js","src/FileSystemHandle.js","src/util.js","node_modules/@parcel/runtime-js/lib/runtime-a6445bc47e3a9643.js","src/FileSystemFileHandle.js","src/FileSystemWritableFileStream.js","src/createWritable.js","src/es6.js","src/showDirectoryPicker.js","src/showOpenFilePicker.js","src/showSaveFilePicker.js","src/getOriginPrivateDirectory.js"],"sourcesContent":["module.exports = (__parcel__import__(\"./\" + \"downloader.1eafb193.js\")).then(() => parcelRequire('kY1Ah'));","module.exports = (__parcel__import__(\"./\" + \"sandbox.1e9739d1.js\")).then(() => parcelRequire('4Oi9K'));","const config = {\n  ReadableStream: globalThis.ReadableStream,\n  WritableStream: globalThis.WritableStream,\n  TransformStream: globalThis.TransformStream,\n  DOMException: globalThis.DOMException,\n  Blob: globalThis.Blob,\n  File: globalThis.File,\n}\n\nexport default config\n","import FileSystemHandle from './FileSystemHandle.js'\nimport { errors } from './util.js'\n\nconst { GONE, MOD_ERR } = errors\n\nconst kAdapter = Symbol('adapter')\n\nclass FileSystemDirectoryHandle extends FileSystemHandle {\n  /** @type {FileSystemDirectoryHandle} */\n  [kAdapter]\n\n  constructor (adapter) {\n    super(adapter)\n    this[kAdapter] = adapter\n  }\n\n  /**\n   * @param {string} name Name of the directory\n   * @param {object} [options]\n   * @param {boolean} [options.create] create the directory if don't exist\n   * @returns {Promise<FileSystemDirectoryHandle>}\n   */\n  async getDirectoryHandle (name, options = {}) {\n    if (name === '') {\n      throw new TypeError(`Name can't be an empty string.`)\n    }\n    if (name === '.' || name === '..' || name.includes('/')) {\n      throw new TypeError(`Name contains invalid characters.`)\n    }\n    options.create = !!options.create\n    const handle = await this[kAdapter].getDirectoryHandle(name, options)\n    return new FileSystemDirectoryHandle(handle)\n  }\n\n  /** @returns {AsyncGenerator<[string, FileSystemHandle | FileSystemDirectoryHandle]>} */\n  async * entries () {\n    const {FileSystemFileHandle} = await import('./FileSystemFileHandle.js')\n\n    for await (const [_, entry] of this[kAdapter].entries())\n      yield [entry.name, entry.kind === 'file'\n        ? new FileSystemFileHandle(entry)\n        : new FileSystemDirectoryHandle(entry)]\n  }\n\n  /** @deprecated use .entries() instead */\n  async * getEntries() {\n    const {FileSystemFileHandle} = await import('./FileSystemFileHandle.js')\n    console.warn('deprecated, use .entries() instead')\n    for await (let entry of this[kAdapter].entries())\n      yield entry.kind === 'file'\n        ? new FileSystemFileHandle(entry)\n        : new FileSystemDirectoryHandle(entry)\n  }\n\n  /**\n   * @param {string} name Name of the file\n   * @param {object} [options]\n   * @param {boolean} [options.create] create the file if don't exist\n   */\n  async getFileHandle (name, options = {}) {\n    const {FileSystemFileHandle} = await import('./FileSystemFileHandle.js')\n    if (name === '') throw new TypeError(`Name can't be an empty string.`)\n    if (name === '.' || name === '..' || name.includes('/')) {\n      throw new TypeError(`Name contains invalid characters.`)\n    }\n    options.create = !!options.create\n    const handle = await this[kAdapter].getFileHandle(name, options)\n    return new FileSystemFileHandle(handle)\n  }\n\n  /**\n   * @param {string} name\n   * @param {object} [options]\n   * @param {boolean} [options.recursive]\n   */\n  async removeEntry (name, options = {}) {\n    if (name === '') {\n      throw new TypeError(`Name can't be an empty string.`)\n    }\n    if (name === '.' || name === '..' || name.includes('/')) {\n      throw new TypeError(`Name contains invalid characters.`)\n    }\n    options.recursive = !!options.recursive // cuz node's fs.rm require boolean\n    return this[kAdapter].removeEntry(name, options)\n  }\n\n  async resolve (possibleDescendant) {\n    if (await possibleDescendant.isSameEntry(this)) {\n      return []\n    }\n\n    const openSet = [{ handle: this, path: [] }]\n\n    while (openSet.length) {\n      let { handle: current, path } = openSet.pop()\n\n      for await (const entry of current.values()) {\n        if (await entry.isSameEntry(possibleDescendant)) {\n          return [...path, entry.name]\n        }\n        if (entry.kind === 'directory') {\n          openSet.push({ handle: entry, path: [...path, entry.name] })\n        }\n      }\n    }\n\n    return null\n  }\n\n  async * keys () {\n    for await (const [name] of this[kAdapter].entries())\n      yield name\n  }\n\n  async * values () {\n    for await (const [_, entry] of this)\n      yield entry\n  }\n\n  [Symbol.asyncIterator]() {\n    return this.entries()\n  }\n}\n\nObject.defineProperty(FileSystemDirectoryHandle.prototype, Symbol.toStringTag, {\n\tvalue: 'FileSystemDirectoryHandle',\n\twritable: false,\n\tenumerable: false,\n\tconfigurable: true\n})\n\nObject.defineProperties(FileSystemDirectoryHandle.prototype, {\n\tgetDirectoryHandle: { enumerable: true },\n\tentries: { enumerable: true },\n\tgetFileHandle: { enumerable: true },\n\tremoveEntry: { enumerable: true }\n})\n\nif (globalThis.FileSystemDirectoryHandle) {\n  const proto = globalThis.FileSystemDirectoryHandle.prototype\n\n  proto.resolve = async function resolve (possibleDescendant) {\n    if (await possibleDescendant.isSameEntry(this)) {\n      return []\n    }\n\n    const openSet = [{ handle: this, path: [] }]\n\n    while (openSet.length) {\n      let { handle: current, path } = openSet.pop()\n\n      for await (const entry of current.values()) {\n        if (await entry.isSameEntry(possibleDescendant)) {\n          return [...path, entry.name]\n        }\n        if (entry.kind === 'directory') {\n          openSet.push({ handle: entry, path: [...path, entry.name] })\n        }\n      }\n    }\n\n    return null\n  }\n\n  // Safari allows us operate on deleted files,\n  // so we need to check if they still exist.\n  // Hope to remove this one day.\n  async function ensureDoActuallyStillExist (handle) {\n    const root = await navigator.storage.getDirectory()\n    const path = await root.resolve(handle)\n    if (path === null) { throw new DOMException(...GONE) }\n  }\n\n  const entries = proto.entries\n  proto.entries = async function * () {\n    await ensureDoActuallyStillExist(this)\n    yield * entries.call(this)\n  }\n  proto[Symbol.asyncIterator] = async function * () {\n    yield * this.entries()\n  }\n\n  const removeEntry = proto.removeEntry\n  proto.removeEntry = async function (name, options = {}) {\n    return removeEntry.call(this, name, options).catch(async err => {\n      const unknown = err instanceof DOMException && err.name === 'UnknownError'\n      if (unknown && !options.recursive) {\n        const empty = (await entries.call(this).next()).done\n        if (!empty) { throw new DOMException(...MOD_ERR) }\n      }\n      throw err\n    })\n  }\n}\n\nexport default FileSystemDirectoryHandle\nexport { FileSystemDirectoryHandle }\n","const kAdapter = Symbol('adapter')\n\n/**\n * @typedef {Object} FileSystemHandlePermissionDescriptor\n * @property {('read'|'readwrite')} [mode='read']\n */\nclass FileSystemHandle {\n  /** @type {FileSystemHandle} */\n  [kAdapter]\n\n  /** @type {string} */\n  name\n  /** @type {('file'|'directory')} */\n  kind\n\n  /** @param {FileSystemHandle & {writable}} adapter */\n  constructor (adapter) {\n    this.kind = adapter.kind\n    this.name = adapter.name\n    this[kAdapter] = adapter\n  }\n\n  /** @param {FileSystemHandlePermissionDescriptor} descriptor */\n  async queryPermission (descriptor = {}) {\n    const { mode = 'read' } = descriptor\n    const handle = this[kAdapter]\n\n    if (handle.queryPermission) {\n      return handle.queryPermission({mode})\n    }\n\n    if (mode === 'read') {\n      return 'granted'\n    } else if (mode === 'readwrite') {\n      return handle.writable ? 'granted' : 'denied'\n    } else {\n      throw new TypeError(`Mode ${mode} must be 'read' or 'readwrite'`)\n    }\n  }\n\n  async requestPermission ({mode = 'read'} = {}) {\n    const handle = this[kAdapter]\n    if (handle.requestPermission) {\n      return handle.requestPermission({mode})\n    }\n\n    if (mode === 'read') {\n      return 'granted'\n    } else if (mode === 'readwrite') {\n      return handle.writable ? 'granted' : 'denied'\n    } else {\n      throw new TypeError(`Mode ${mode} must be 'read' or 'readwrite'`)\n    }\n  }\n\n  /**\n   * Attempts to remove the entry represented by handle from the underlying file system.\n   *\n   * @param {object} options\n   * @param {boolean} [options.recursive=false]\n   */\n  async remove (options = {}) {\n    await this[kAdapter].remove(options)\n  }\n\n  /**\n   * @param {FileSystemHandle} other\n   */\n  async isSameEntry (other) {\n    if (this === other) return true\n    if (\n      (!other) ||\n      (typeof other !== 'object') ||\n      (this.kind !== other.kind) ||\n      (!other[kAdapter])\n    ) return false\n    return this[kAdapter].isSameEntry(other[kAdapter])\n  }\n}\n\nObject.defineProperty(FileSystemHandle.prototype, Symbol.toStringTag, {\n  value: 'FileSystemHandle',\n  writable: false,\n  enumerable: false,\n  configurable: true\n})\n\n// Safari safari doesn't support writable streams yet.\nif (globalThis.FileSystemHandle) {\n  globalThis.FileSystemHandle.prototype.queryPermission ??= function (descriptor) {\n    return 'granted'\n  }\n}\n\nexport default FileSystemHandle\nexport { FileSystemHandle }\n","export const errors = {\n  INVALID: ['seeking position failed.', 'InvalidStateError'],\n  GONE: ['A requested file or directory could not be found at the time an operation was processed.', 'NotFoundError'],\n  MISMATCH: ['The path supplied exists, but was not an entry of requested type.', 'TypeMismatchError'],\n  MOD_ERR: ['The object can not be modified in this way.', 'InvalidModificationError'],\n  SYNTAX: m => [`Failed to execute 'write' on 'UnderlyingSinkBase': Invalid params passed. ${m}`, 'SyntaxError'],\n  SECURITY: ['It was determined that certain files are unsafe for access within a Web application, or that too many calls are being made on file resources.', 'SecurityError'],\n  DISALLOWED: ['The request is not allowed by the user agent or the platform in the current context.', 'NotAllowedError']\n}\n\nexport const config = {\n  writable: globalThis.WritableStream\n}\n\nexport async function fromDataTransfer (entries) {\n  console.warn('deprecated fromDataTransfer - use `dt.items[0].getAsFileSystemHandle()` instead')\n  const [memory, sandbox, fs] = await Promise.all([\n    import('./adapters/memory.js'),\n    import('./adapters/sandbox.js'),\n    import('./FileSystemDirectoryHandle.js')\n  ])\n\n  const folder = new memory.FolderHandle('', false)\n  folder._entries = entries.map(entry => entry.isFile\n    ? new sandbox.FileHandle(entry, false)\n    : new sandbox.FolderHandle(entry, false)\n  )\n\n  return new fs.FileSystemDirectoryHandle(folder)\n}\n\nexport async function getDirHandlesFromInput (input) {\n  const { FolderHandle, FileHandle } = await import('./adapters/memory.js')\n  const { FileSystemDirectoryHandle } = await import('./FileSystemDirectoryHandle.js')\n\n  const files = Array.from(input.files)\n  const rootName = files[0].webkitRelativePath.split('/', 1)[0]\n  const root = new FolderHandle(rootName, false)\n\n  files.forEach(file => {\n    const path = file.webkitRelativePath.split('/')\n    path.shift()\n    const name = path.pop()\n\n    const dir = path.reduce((dir, path) => {\n      if (!dir._entries[path]) dir._entries[path] = new FolderHandle(path, false)\n      return dir._entries[path]\n    }, root)\n\n    dir._entries[name] = new FileHandle(file.name, file, false)\n  })\n\n  return new FileSystemDirectoryHandle(root)\n}\n\nexport async function getFileHandlesFromInput (input) {\n  const { FileHandle } = await import('./adapters/memory.js')\n  const { FileSystemFileHandle } = await import('./FileSystemFileHandle.js')\n\n  return Array.from(input.files).map(file =>\n    new FileSystemFileHandle(new FileHandle(file.name, file, false))\n  )\n}\n","module.exports = (__parcel__import__(\"./\" + \"memory.c7fc522d.js\")).then(() => parcelRequire('6KLAJ'));","import FileSystemHandle from './FileSystemHandle.js'\nimport FileSystemWritableFileStream from './FileSystemWritableFileStream.js'\nimport './createWritable.js'\n\nconst kAdapter = Symbol('adapter')\n\nclass FileSystemFileHandle extends FileSystemHandle {\n  /** @type {FileSystemFileHandle} */\n  [kAdapter]\n\n  constructor (adapter) {\n    super(adapter)\n    this[kAdapter] = adapter\n  }\n\n  /**\n   * @param  {Object} [options={}]\n   * @param  {boolean} [options.keepExistingData]\n   * @returns {Promise<FileSystemWritableFileStream>}\n   */\n  async createWritable (options = {}) {\n    return new FileSystemWritableFileStream(\n      await this[kAdapter].createWritable(options)\n    )\n  }\n\n  /**\n   * @returns {Promise<File>}\n   */\n  async getFile () {\n    return this[kAdapter].getFile()\n  }\n}\n\nObject.defineProperty(FileSystemFileHandle.prototype, Symbol.toStringTag, {\n  value: 'FileSystemFileHandle',\n  writable: false,\n  enumerable: false,\n  configurable: true\n})\n\nObject.defineProperties(FileSystemFileHandle.prototype, {\n  createWritable: { enumerable: true },\n  getFile: { enumerable: true }\n})\n\nexport default FileSystemFileHandle\nexport { FileSystemFileHandle }\n","import config from './config.js'\n\nconst { WritableStream } = config\n\nclass FileSystemWritableFileStream extends WritableStream {\n  constructor (writer) {\n    super(writer)\n    // Stupid Safari hack to extend native classes\n    // https://bugs.webkit.org/show_bug.cgi?id=226201\n    Object.setPrototypeOf(this, FileSystemWritableFileStream.prototype)\n\n    /** @private */\n    this._closed = false\n  }\n\n  async close () {\n    this._closed = true\n    const w = this.getWriter()\n    const p = w.close()\n    w.releaseLock()\n    return p\n    // return super.close ? super.close() : this.getWriter().close()\n  }\n\n  /** @param {number} position */\n  seek (position) {\n    return this.write({ type: 'seek', position })\n  }\n\n  /** @param {number} size */\n  truncate (size) {\n    return this.write({ type: 'truncate', size })\n  }\n\n  // The write(data) method steps are:\n  write (data) {\n    if (this._closed) {\n      return Promise.reject(new TypeError('Cannot write to a CLOSED writable stream'))\n    }\n\n    // 1. Let writer be the result of getting a writer for this.\n    const writer = this.getWriter()\n\n    // 2. Let result be the result of writing a chunk to writer given data.\n    const result = writer.write(data)\n\n    // 3. Release writer.\n    writer.releaseLock()\n\n    // 4. Return result.\n    return result\n  }\n}\n\nObject.defineProperty(FileSystemWritableFileStream.prototype, Symbol.toStringTag, {\n  value: 'FileSystemWritableFileStream',\n  writable: false,\n  enumerable: false,\n  configurable: true\n})\n\nObject.defineProperties(FileSystemWritableFileStream.prototype, {\n  close: { enumerable: true },\n  seek: { enumerable: true },\n  truncate: { enumerable: true },\n  write: { enumerable: true }\n})\n\n// Safari safari doesn't support writable streams yet.\nif (\n  globalThis.FileSystemFileHandle &&\n  !globalThis.FileSystemFileHandle.prototype.createWritable &&\n  !globalThis.FileSystemWritableFileStream\n) {\n  globalThis.FileSystemWritableFileStream = FileSystemWritableFileStream\n}\n\nexport default FileSystemWritableFileStream\nexport { FileSystemWritableFileStream }\n","import { errors } from './util.js'\n\nconst { INVALID, SYNTAX, GONE } = errors\n\n// Safari doesn't support async createWritable streams yet.\nif (\n  globalThis.FileSystemFileHandle &&\n  !globalThis.FileSystemFileHandle.prototype.createWritable\n) {\n  const wm = new WeakMap()\n\n  let workerUrl\n\n  // Worker code that should be inlined (can't use any external functions)\n  const code = () => {\n    let fileHandle, handle\n\n    onmessage = async evt => {\n      const port = evt.ports[0]\n      const cmd = evt.data\n      switch (cmd.type) {\n        case 'open':\n          const file = cmd.name\n\n          let dir = await navigator.storage.getDirectory()\n\n          for (const folder of cmd.path) {\n            dir = await dir.getDirectoryHandle(folder)\n          }\n\n          fileHandle = await dir.getFileHandle(file)\n          handle = await fileHandle.createSyncAccessHandle()\n          break\n        case 'write':\n          handle.write(cmd.data, { at: cmd.position })\n          handle.flush()\n          break\n        case 'truncate':\n          handle.truncate(cmd.size)\n          break\n        case 'abort':\n        case 'close':\n          handle.close()\n          break\n      }\n\n      port.postMessage(0)\n    }\n  }\n\n\n  globalThis.FileSystemFileHandle.prototype.createWritable = async function (options) {\n    // Safari only support writing data in a worker with sync access handle.\n    if (!workerUrl) {\n      const stringCode = `(${code.toString()})()`\n      const blob = new Blob([stringCode], {\n        type: 'text/javascript'\n      })\n      workerUrl = URL.createObjectURL(blob)\n    }\n    const worker = new Worker(workerUrl, { type: 'module' })\n\n    let position = 0\n    const textEncoder = new TextEncoder()\n    let size = await this.getFile().then(file => file.size)\n\n    const send = message => new Promise((resolve, reject) => {\n      const mc = new MessageChannel()\n      mc.port1.onmessage = evt => {\n        if (evt.data instanceof Error) reject(evt.data)\n        else resolve(evt.data)\n        mc.port1.close()\n        mc.port2.close()\n        mc.port1.onmessage = null\n      }\n      worker.postMessage(message, [mc.port2])\n    })\n\n    // Safari also don't support transferable file system handles.\n    // So we need to pass the path to the worker. This is a bit hacky and ugly.\n    const root = await navigator.storage.getDirectory()\n    const parent = await wm.get(this)\n    const path = await root.resolve(parent)\n\n    // Should likely never happen, but just in case...\n    if (path === null) throw new DOMException(...GONE)\n\n    let controller\n    await send({ type: 'open', path, name: this.name })\n\n    if (options?.keepExistingData === false) {\n      await send({ type: 'truncate', size: 0 })\n      size = 0\n    }\n\n    const ws = new FileSystemWritableFileStream({\n      start: ctrl => {\n        controller = ctrl\n      },\n      async write(chunk) {\n        const isPlainObject = chunk?.constructor === Object\n\n        if (isPlainObject) {\n          chunk = { ...chunk }\n        } else {\n          chunk = { type: 'write', data: chunk, position }\n        }\n\n        if (chunk.type === 'write') {\n          if (!('data' in chunk)) {\n            await send({ type: 'close' })\n            throw new DOMException(...SYNTAX('write requires a data argument'))\n          }\n\n          chunk.position ??= position\n\n          if (typeof chunk.data === 'string') {\n            chunk.data = textEncoder.encode(chunk.data)\n          }\n\n          else if (chunk.data instanceof ArrayBuffer) {\n            chunk.data = new Uint8Array(chunk.data)\n          }\n\n          else if (!(chunk.data instanceof Uint8Array) && ArrayBuffer.isView(chunk.data)) {\n            chunk.data = new Uint8Array(chunk.data.buffer, chunk.data.byteOffset, chunk.data.byteLength)\n          }\n\n          else if (!(chunk.data instanceof Uint8Array)) {\n            const ab = await new Response(chunk.data).arrayBuffer()\n            chunk.data = new Uint8Array(ab)\n          }\n\n          if (Number.isInteger(chunk.position) && chunk.position >= 0) {\n            position = chunk.position\n          }\n          position += chunk.data.byteLength\n          size += chunk.data.byteLength\n        } else if (chunk.type === 'seek') {\n          if (Number.isInteger(chunk.position) && chunk.position >= 0) {\n            if (size < chunk.position) {\n              throw new DOMException(...INVALID)\n            }\n            console.log('seeking', chunk)\n            position = chunk.position\n            return // Don't need to enqueue seek...\n          } else {\n            await send({ type: 'close' })\n            throw new DOMException(...SYNTAX('seek requires a position argument'))\n          }\n        } else if (chunk.type === 'truncate') {\n          if (Number.isInteger(chunk.size) && chunk.size >= 0) {\n            size = chunk.size\n            if (position > size) { position = size }\n          } else {\n            await send({ type: 'close' })\n            throw new DOMException(...SYNTAX('truncate requires a size argument'))\n          }\n        }\n\n        await send(chunk)\n      },\n      async close () {\n        await send({ type: 'close' })\n        worker.terminate()\n      },\n      async abort (reason) {\n        await send({ type: 'abort', reason })\n        worker.terminate()\n      },\n    })\n\n    return ws\n  }\n\n  const orig = FileSystemDirectoryHandle.prototype.getFileHandle\n  FileSystemDirectoryHandle.prototype.getFileHandle = async function (...args) {\n    const handle = await orig.call(this, ...args)\n    wm.set(handle, this)\n    return handle\n  }\n}\n","import showDirectoryPicker from './showDirectoryPicker.js'\nimport showOpenFilePicker from './showOpenFilePicker.js'\nimport showSaveFilePicker from './showSaveFilePicker.js'\nimport getOriginPrivateDirectory from './getOriginPrivateDirectory.js'\n// FileSystemWritableFileStream must be loaded before FileSystemFileHandle\nimport FileSystemWritableFileStream from './FileSystemWritableFileStream.js'\nimport FileSystemDirectoryHandle from './FileSystemDirectoryHandle.js'\nimport FileSystemFileHandle from './FileSystemFileHandle.js'\nimport FileSystemHandle from './FileSystemHandle.js'\n\nexport {\n  FileSystemDirectoryHandle,\n  FileSystemFileHandle,\n  FileSystemHandle,\n  FileSystemWritableFileStream,\n  getOriginPrivateDirectory,\n  showDirectoryPicker,\n  showOpenFilePicker,\n  showSaveFilePicker\n}\n","/** @typedef {import('./FileSystemDirectoryHandle.js').default} FileSystemDirectoryHandle */\n\nconst native = globalThis.showDirectoryPicker\n\n/**\n * @param {Object} [options]\n * @param {boolean} [options._preferPolyfill] If you rather want to use the polyfill instead of the native\n * @returns {Promise<FileSystemDirectoryHandle>}\n */\nasync function showDirectoryPicker (options = {}) {\n  if (native && !options._preferPolyfill) {\n    return native(options)\n  }\n\n  const input = document.createElement('input')\n  input.type = 'file'\n  input.webkitdirectory = true\n  // Fallback to multiple files input for iOS Safari\n  input.multiple = true\n\n  // See https://stackoverflow.com/questions/47664777/javascript-file-input-onchange-not-working-ios-safari-only\n  input.style.position = 'fixed'\n  input.style.top = '-100000px'\n  input.style.left = '-100000px'\n  document.body.appendChild(input)\n\n  // Lazy load while the user is choosing the directory\n  const p = import('./util.js')\n\n  await new Promise(resolve => {\n    input.addEventListener('change', resolve)\n    input.click()\n  })\n\n  return p.then(mod => mod.getDirHandlesFromInput(input))\n}\n\nexport default showDirectoryPicker\nexport { showDirectoryPicker }\n","/** @typedef {import('./FileSystemFileHandle.js').default} FileSystemFileHandle */\n\nconst def = { accepts: [] }\nconst native = globalThis.showOpenFilePicker\n\n/**\n * @param {Object} [options]\n * @param {boolean} [options.multiple] If you want to allow more than one file\n * @param {boolean} [options.excludeAcceptAllOption=false] Prevent user for selecting any\n * @param {Object[]} [options.accepts] Files you want to accept\n * @param {boolean} [options._preferPolyfill] If you rather want to use the polyfill instead of the native\n * @returns {Promise<FileSystemFileHandle[]>}\n */\nasync function showOpenFilePicker (options = {}) {\n  const opts = { ...def, ...options }\n\n  if (native && !options._preferPolyfill) {\n    return native(opts)\n  }\n\n  const input = document.createElement('input')\n  input.type = 'file'\n  input.multiple = opts.multiple\n  input.accept = (opts.accepts || [])\n    .map(e => [\n      ...(e.extensions || []).map(e => '.' + e),\n      ...e.mimeTypes || []]\n    )\n    .flat()\n    .join(',')\n\n  // See https://stackoverflow.com/questions/47664777/javascript-file-input-onchange-not-working-ios-safari-only\n  Object.assign(input.style, {\n    position: 'fixed',\n    top: '-100000px',\n    left: '-100000px'\n  })\n\n  document.body.appendChild(input)\n\n  // Lazy load while the user is choosing the directory\n  const p = import('./util.js')\n\n  await new Promise(resolve => {\n    input.addEventListener('change', resolve, { once: true })\n    input.click()\n  })\n  input.remove()\n\n  return p.then(m => m.getFileHandlesFromInput(input))\n}\n\nexport default showOpenFilePicker\nexport { showOpenFilePicker }\n","/** @typedef {import('./FileSystemFileHandle.js').default} FileSystemFileHandle */\n\nconst native = globalThis.showSaveFilePicker\n\n/**\n * @param {Object} [options]\n * @param {boolean} [options.excludeAcceptAllOption=false] Prevent user for selecting any\n * @param {Object[]} [options.types] Files you want to accept\n * @param {string} [options.suggestedName] the name to fall back to when using polyfill\n * @param {string} [options._name] the name to fall back to when using polyfill\n * @param {boolean} [options._preferPolyfill] If you rather want to use the polyfill instead of the native\n * @return {Promise<FileSystemFileHandle>}\n */\nasync function showSaveFilePicker (options = {}) {\n  if (native && !options._preferPolyfill) {\n    return native(options)\n  }\n\n  if (options._name) {\n    console.warn('deprecated _name, spec now have `suggestedName`')\n    options.suggestedName = options._name\n  }\n\n  const { FileSystemFileHandle } = await import('./FileSystemFileHandle.js')\n  const { FileHandle } = await import('./adapters/downloader.js')\n  return new FileSystemFileHandle(new FileHandle(options.suggestedName))\n}\n\nexport default showSaveFilePicker\nexport { showSaveFilePicker }\n","/** @typedef {import('./FileSystemDirectoryHandle.js').default} FileSystemDirectoryHandle */\n\nif (globalThis.DataTransferItem && !DataTransferItem.prototype.getAsFileSystemHandle) {\n  DataTransferItem.prototype.getAsFileSystemHandle = async function () {\n    const entry = this.webkitGetAsEntry()\n    const [\n      { FileHandle, FolderHandle },\n      { FileSystemDirectoryHandle },\n      { FileSystemFileHandle }\n    ] = await Promise.all([\n      import('./adapters/sandbox.js'),\n      import('./FileSystemDirectoryHandle.js'),\n      import('./FileSystemFileHandle.js')\n    ])\n\n    return entry.isFile\n      ? new FileSystemFileHandle(new FileHandle(entry, false))\n      : new FileSystemDirectoryHandle(new FolderHandle(entry, false))\n  }\n}\n\n/**\n * @param {object=} driver\n * @return {Promise<FileSystemDirectoryHandle>}\n */\nasync function getOriginPrivateDirectory (driver, options = {}) {\n  if (!driver) {\n    return globalThis.navigator?.storage?.getDirectory() || globalThis.getOriginPrivateDirectory()\n  }\n  const {FileSystemDirectoryHandle} = await import('./FileSystemDirectoryHandle.js')\n  const module = await driver\n  const sandbox = await (module.default\n    ? module.default(options)\n    : module(options)\n  )\n  return new FileSystemDirectoryHandle(sandbox)\n}\n\nexport default getOriginPrivateDirectory\n"],"names":[],"version":3,"file":"es6.js.map"}