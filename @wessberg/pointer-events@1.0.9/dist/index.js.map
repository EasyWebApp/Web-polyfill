{"version":3,"file":"index.js","sources":["../src/is-touch-device.ts","../src/patch/navigator/max-touch-points-check.ts","../src/patch/navigator/max-touch-points.ts","../src/pointer-event-type.ts","../src/is-pointer-event-type.ts","../src/patch/event-target/global-event-handlers-check.ts","../src/patch/event-target/dispatch-event.ts","../node_modules/tslib/tslib.es6.js","../src/pointer-event-default-values.ts","../src/shared-descriptor-options.ts","../src/get-descriptor-with-fallback.ts","../src/seen-pointer-ids.ts","../src/pointer-event.ts","../src/convert-pointer-event-type.ts","../src/is-element.ts","../src/get-parent.ts","../src/find-nearest-root.ts","../src/pointer-capture.ts","../src/touch/get-touch-properties.ts","../src/get-event-path.ts","../src/find-nearest-ancestors-with-scroll.ts","../src/overwrite-targets-for-event.ts","../src/mouse/current-mouse-pointer-id.ts","../src/touch/current-touch-pointer-id.ts","../src/touch/get-pointer-id-from-touch.ts","../src/is-cancelable.ts","../src/can-bubble.ts","../src/cloneable-event-properties.ts","../src/cloneable-ui-event-properties.ts","../src/clone-event-as-pointer-event.ts","../src/pointer-id-to-cancel-fired.ts","../src/invoke-listener.ts","../src/find-nearest-ancestors-with-touch-action.ts","../src/touch/touch-handler.ts","../src/mouse/get-mouse-properties.ts","../src/mouse/mouse-handler.ts","../src/bound-handler.ts","../src/patch/window/pointer-event-check.ts","../src/patch/event-target/add-event-listener.ts","../src/patch/event-target/remove-event-listener.ts","../src/patch/event-target/global-event-handlers.ts","../src/pointer-lock.ts","../src/throw-dom-exception.ts","../src/patch/element/set-pointer-capture.ts","../src/patch/element/release-pointer-capture.ts","../src/patch/element/has-pointer-capture.ts","../src/patch/window/pointer-event.ts"],"sourcesContent":["/**\n * Whether or not the device is a Touch device\n * @type {boolean}\n */\nexport const isTouchDevice = \"ontouchstart\" in document;\n","/**\n * If true, the user agent already supports the 'maxTouchPoints' property on the Navigator prototype\n * @type {boolean}\n */\nexport const SUPPORTS_MAX_TOUCH_POINTS = \"maxTouchPoints\" in Navigator.prototype;\n","import {isTouchDevice} from \"../../is-touch-device\";\nimport {SUPPORTS_MAX_TOUCH_POINTS} from \"./max-touch-points-check\";\n\n// tslint:disable:no-any\n\n// Only set the 'maxTouchPoints' property on the Navigator prototype if it isn't already supported\nif (!SUPPORTS_MAX_TOUCH_POINTS) {\n\t// If the device is a touch device, use 1 as the max available touch points even if it may be more. We have no way of knowing! Otherwise, fall back to 0\n\tObject.defineProperty(Navigator.prototype, \"maxTouchPoints\", {\n\t\tvalue:\n\t\t\t\"maxTouchPoints\" in navigator\n\t\t\t\t? // Use the existing maxTouchPoints value if given\n\t\t\t\t  navigator.maxTouchPoints\n\t\t\t\t: // Use the existing msMaxTouchPoints value if given\n\t\t\t\t\"msMaxTouchPoints\" in navigator\n\t\t\t\t? (<any>navigator).msMaxTouchPoints\n\t\t\t\t: !isTouchDevice\n\t\t\t\t? 0\n\t\t\t\t: 1,\n\t\tenumerable: true\n\t});\n}\n","export declare type PointerEventType =\n\t| \"pointerover\"\n\t| \"pointerenter\"\n\t| \"pointerdown\"\n\t| \"pointermove\"\n\t| \"pointerup\"\n\t| \"pointercancel\"\n\t| \"pointerout\"\n\t| \"pointerleave\"\n\t| \"gotpointercapture\"\n\t| \"lostpointercapture\";\n\nexport const POINTER_EVENT_TYPES: PointerEventType[] = [\n\t\"pointerover\",\n\t\"pointerenter\",\n\t\"pointerdown\",\n\t\"pointermove\",\n\t\"pointerup\",\n\t\"pointercancel\",\n\t\"pointerout\",\n\t\"pointerleave\",\n\t\"gotpointercapture\",\n\t\"lostpointercapture\"\n];\n","import {PointerEventType} from \"./pointer-event-type\";\n\n/**\n * Returns true if the given event type represents a PointerEvent\n * @param {string} type\n * @returns {type is PointerEventType}\n */\nexport function isPointerEventType(type: string): type is PointerEventType {\n\tswitch (<PointerEventType>type) {\n\t\tcase \"gotpointercapture\":\n\t\tcase \"lostpointercapture\":\n\t\tcase \"pointerdown\":\n\t\tcase \"pointermove\":\n\t\tcase \"pointerup\":\n\t\tcase \"pointercancel\":\n\t\tcase \"pointerenter\":\n\t\tcase \"pointerleave\":\n\t\tcase \"pointerout\":\n\t\tcase \"pointerover\":\n\t\t\treturn true;\n\t\tdefault:\n\t\t\treturn false;\n\t}\n}\n","import {POINTER_EVENT_TYPES} from \"../../pointer-event-type\";\n\n/**\n * Checks if there are Global Event Handlers (such as 'onpointerdown') for every Pointer Event\n * @type {boolean}\n */\nexport const SUPPORTS_POINTER_EVENT_HANDLERS = POINTER_EVENT_TYPES.every(type => `on${type}` in window);\n","import {isPointerEventType} from \"../../is-pointer-event-type\";\nimport {SUPPORTS_POINTER_EVENT_HANDLERS} from \"./global-event-handlers-check\";\n\n// Only patch the dispatchEvent EventTarget prototype method if the user agent\n// doesn't already support Global Event Handlers for Pointer Events\nif (!SUPPORTS_POINTER_EVENT_HANDLERS) {\n\t// Keep a reference to the original dispatchEvent prototype method\n\tconst originalDispatchEvent = EventTarget.prototype.dispatchEvent;\n\n\t/**\n\t * Overwrite the dispatchEvent prototype method such that we can provide special handling\n\t * for PointerEvents\n\t * @param {Event} event\n\t * @returns {boolean}\n\t */\n\tEventTarget.prototype.dispatchEvent = function(event: Event): boolean {\n\t\tif (isPointerEventType(event.type)) {\n\t\t\t// Also invoke the event handler, if it exists\n\t\t\tconst eventHandler: Function | null = this[<keyof EventTarget>`on${event.type}`];\n\t\t\tif (eventHandler != null) {\n\t\t\t\teventHandler(event);\n\t\t\t}\n\t\t}\n\n\t\treturn originalDispatchEvent.call(this, event);\n\t};\n}\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import {IPointerEventBase} from \"./i-pointer-event-base\";\n\n/**\n * The default values for constructed PointerEvents\n * @type {object}\n */\nexport const POINTER_EVENT_DEFAULT_VALUES: {[Key in keyof IPointerEventBase]: IPointerEventBase[Key]} = {\n\tpointerId: 0,\n\twidth: 1,\n\theight: 1,\n\tpressure: 0,\n\ttangentialPressure: 0,\n\ttiltX: 0,\n\ttiltY: 0,\n\ttwist: 0,\n\tpointerType: \"\",\n\tisPrimary: false\n};\n","export const SHARED_DESCRIPTOR_OPTIONS: Partial<PropertyDescriptor> = {\n\twritable: false,\n\tconfigurable: true,\n\tenumerable: true\n};\n","import {IPointerEventBase} from \"./i-pointer-event-base\";\nimport {POINTER_EVENT_DEFAULT_VALUES} from \"./pointer-event-default-values\";\nimport {SHARED_DESCRIPTOR_OPTIONS} from \"./shared-descriptor-options\";\n\n/**\n * Gets a PropertyDescriptor with a fallback value\n * @param {Key} key\n * @param {IPointerEventBase[Key]} providedValue\n * @returns {PropertyDescriptor}\n */\nexport function getDescriptorWithFallback<Key extends keyof IPointerEventBase>(key: Key, providedValue?: IPointerEventBase[Key]): PropertyDescriptor {\n\treturn {\n\t\tvalue: providedValue != null ? providedValue : POINTER_EVENT_DEFAULT_VALUES[key],\n\t\t...SHARED_DESCRIPTOR_OPTIONS\n\t};\n}\n","export const SEEN_POINTER_IDS: Set<number> = new Set();\n","import {PointerEventInit} from \"./pointer-event-init\";\nimport {IPointerEventBase} from \"./i-pointer-event-base\";\nimport {PointerEventType} from \"./pointer-event-type\";\nimport {getDescriptorWithFallback} from \"./get-descriptor-with-fallback\";\nimport {SEEN_POINTER_IDS} from \"./seen-pointer-ids\";\n\n// tslint:disable:no-any\n\n// tslint:disable:bool-param-default\n\n/**\n * A specialization of MouseEvents as spec'ed in https://www.w3.org/TR/pointerevents\n */\nexport class PointerEvent implements IPointerEventBase, MouseEvent {\n\t/**\n\t * See https://www.w3.org/TR/pointerevents/#dom-pointerevent-pointerid\n\t * @type {number}\n\t */\n\tpublic readonly pointerId: number;\n\n\t/**\n\t * See https://www.w3.org/TR/pointerevents/#dom-pointerevent-width\n\t * @type {number}\n\t */\n\tpublic readonly width: number;\n\n\t/**\n\t * See https://www.w3.org/TR/pointerevents/#dom-pointerevent-height\n\t * @type {number}\n\t */\n\tpublic readonly height: number;\n\n\t/**\n\t * See https://www.w3.org/TR/pointerevents/#dom-pointerevent-pressure\n\t * @type {number}\n\t */\n\tpublic readonly pressure: number;\n\n\t/**\n\t * See https://www.w3.org/TR/pointerevents/#dom-pointerevent-tangentialpressure\n\t * @type {number}\n\t */\n\tpublic readonly tangentialPressure: number;\n\n\t/**\n\t * See https://www.w3.org/TR/pointerevents/#dom-pointerevent-tiltx\n\t * @type {number}\n\t */\n\tpublic readonly tiltX: number;\n\n\t/**\n\t * See https://www.w3.org/TR/pointerevents/#dom-pointerevent-tilty\n\t * @type {number}\n\t */\n\tpublic readonly tiltY: number;\n\n\t/**\n\t * See https://www.w3.org/TR/pointerevents/#dom-pointerevent-twist\n\t * @type {number}\n\t */\n\tpublic readonly twist: number;\n\n\t/**\n\t * See https://www.w3.org/TR/pointerevents/#dom-pointerevent-pointertype\n\t * @type {number}\n\t */\n\tpublic readonly pointerType: \"\" | \"mouse\" | \"pen\" | \"touch\";\n\n\t/**\n\t * See https://www.w3.org/TR/pointerevents/#dom-pointerevent-isprimary\n\t * @type {number}\n\t */\n\tpublic readonly isPrimary: boolean;\n\n\t/**\n\t * Overwrites the event type\n\t * @override\n\t */\n\tpublic readonly type: PointerEventType;\n\n\t/**\n\t * Uses the underlying MouseEvent implementation\n\t * @type {number}\n\t */\n\tpublic readonly AT_TARGET: number;\n\n\t/**\n\t * Uses the underlying MouseEvent implementation\n\t * @type {number}\n\t */\n\tpublic readonly BUBBLING_PHASE: number;\n\n\t/**\n\t * Uses the underlying MouseEvent implementation\n\t * @type {number}\n\t */\n\tpublic readonly CAPTURING_PHASE: number;\n\n\t/**\n\t * Uses the underlying MouseEvent implementation\n\t * @type {number}\n\t */\n\tpublic readonly NONE: number;\n\n\t/**\n\t * Uses the underlying MouseEvent implementation\n\t * @type {boolean}\n\t */\n\tpublic readonly altKey: boolean;\n\n\t/**\n\t * Uses the underlying MouseEvent implementation\n\t * @type {boolean}\n\t */\n\tpublic readonly bubbles: boolean;\n\n\t/**\n\t * Uses the underlying MouseEvent implementation\n\t * @type {number}\n\t */\n\tpublic readonly button: number;\n\n\t/**\n\t * Uses the underlying MouseEvent implementation\n\t * @type {number}\n\t */\n\tpublic readonly buttons: number;\n\n\t/**\n\t * Uses the underlying MouseEvent implementation\n\t * @type {boolean}\n\t */\n\tpublic cancelBubble: boolean;\n\n\t/**\n\t * Uses the underlying MouseEvent implementation\n\t * @type {boolean}\n\t */\n\tpublic readonly cancelable: boolean;\n\n\t/**\n\t * Uses the underlying MouseEvent implementation\n\t * @type {number}\n\t */\n\tpublic readonly clientX: number;\n\n\t/**\n\t * Uses the underlying MouseEvent implementation\n\t * @type {number}\n\t */\n\tpublic readonly clientY: number;\n\n\t/**\n\t * Uses the underlying MouseEvent implementation\n\t * @type {boolean}\n\t */\n\tpublic readonly composed: boolean;\n\n\t/**\n\t * Uses the underlying MouseEvent implementation\n\t * @type {boolean}\n\t */\n\tpublic readonly ctrlKey: boolean;\n\n\t/**\n\t * Uses the underlying MouseEvent implementation\n\t * @type {EventTarget|null}\n\t */\n\tpublic readonly currentTarget: EventTarget | null;\n\n\t/**\n\t * Uses the underlying MouseEvent implementation\n\t * @type {boolean}\n\t */\n\tpublic readonly defaultPrevented: boolean;\n\n\t/**\n\t * Uses the underlying MouseEvent implementation\n\t * @type {number}\n\t */\n\tpublic readonly detail: number;\n\n\t/**\n\t * Uses the underlying MouseEvent implementation\n\t * @type {number}\n\t */\n\tpublic readonly eventPhase: number;\n\n\t/**\n\t * Uses the underlying MouseEvent implementation\n\t * @type {Element}\n\t */\n\tpublic readonly fromElement: Element;\n\n\t/**\n\t * Uses the underlying MouseEvent implementation\n\t * @type {boolean}\n\t */\n\tpublic readonly isTrusted: boolean;\n\n\t/**\n\t * Uses the underlying MouseEvent implementation\n\t * @type {number}\n\t */\n\tpublic readonly layerX: number;\n\n\t/**\n\t * Uses the underlying MouseEvent implementation\n\t * @type {number}\n\t */\n\tpublic readonly layerY: number;\n\n\t/**\n\t * Uses the underlying MouseEvent implementation\n\t * @type {boolean}\n\t */\n\tpublic readonly metaKey: boolean;\n\n\t/**\n\t * Uses the underlying MouseEvent implementation\n\t * @type {movementX}\n\t */\n\tpublic readonly movementX: number;\n\n\t/**\n\t * Uses the underlying MouseEvent implementation\n\t * @type {movementY}\n\t */\n\tpublic readonly movementY: number;\n\n\t/**\n\t * Uses the underlying MouseEvent implementation\n\t * @type {offsetX}\n\t */\n\tpublic readonly offsetX: number;\n\n\t/**\n\t * Uses the underlying MouseEvent implementation\n\t * @type {offsetY}\n\t */\n\tpublic readonly offsetY: number;\n\n\t/**\n\t * Uses the underlying MouseEvent implementation\n\t * @type {number}\n\t */\n\tpublic readonly pageX: number;\n\n\t/**\n\t * Uses the underlying MouseEvent implementation\n\t * @type {number}\n\t */\n\tpublic readonly pageY: number;\n\n\t/**\n\t * Uses the underlying MouseEvent implementation\n\t * @type {EventTarget}\n\t */\n\tpublic readonly relatedTarget: EventTarget;\n\n\t/**\n\t * Uses the underlying MouseEvent implementation\n\t * @type {boolean}\n\t */\n\tpublic returnValue: boolean;\n\n\t/**\n\t * Uses the underlying MouseEvent implementation\n\t * @type {number}\n\t */\n\tpublic readonly screenX: number;\n\n\t/**\n\t * Uses the underlying MouseEvent implementation\n\t * @type {number}\n\t */\n\tpublic readonly screenY: number;\n\n\t/**\n\t * Uses the underlying MouseEvent implementation\n\t * @type {boolean}\n\t */\n\tpublic readonly shiftKey: boolean;\n\n\t/**\n\t * Uses the underlying MouseEvent implementation\n\t * @type {Element|null}\n\t */\n\tpublic readonly srcElement: Element | null;\n\n\t/**\n\t * Uses the underlying MouseEvent implementation\n\t * @type {EventTarget|null}\n\t */\n\tpublic readonly target: EventTarget | null;\n\n\t/**\n\t * Uses the underlying MouseEvent implementation\n\t * @type {number}\n\t */\n\tpublic readonly timeStamp: number;\n\n\t/**\n\t * Uses the underlying MouseEvent implementation\n\t * @type {Element}\n\t */\n\tpublic readonly toElement: Element;\n\n\t/**\n\t * Uses the underlying MouseEvent implementation\n\t * @type {Window}\n\t */\n\tpublic readonly view: Window;\n\n\t/**\n\t * Uses the underlying MouseEvent implementation\n\t * @type {number}\n\t */\n\tpublic readonly which: number;\n\n\t/**\n\t * Uses the underlying MouseEvent implementation\n\t * @type {number}\n\t */\n\tpublic readonly x: number;\n\n\t/**\n\t * Uses the underlying MouseEvent implementation\n\t * @type {number}\n\t */\n\tpublic readonly y: number;\n\n\tconstructor(type: PointerEventType, eventInitDict: Partial<PointerEventInit> = {}) {\n\t\t// Sets all of the given PropertyDescriptors with fallbacks to the default values as defined by the specification\n\t\tconst propsToSet: {[Key in keyof IPointerEventBase]?: PropertyDescriptor} = {\n\t\t\tpointerId: getDescriptorWithFallback(\"pointerId\", eventInitDict.pointerId),\n\t\t\twidth: getDescriptorWithFallback(\"width\", eventInitDict.width),\n\t\t\theight: getDescriptorWithFallback(\"height\", eventInitDict.height),\n\t\t\tpressure: getDescriptorWithFallback(\"pressure\", eventInitDict.pressure),\n\t\t\ttangentialPressure: getDescriptorWithFallback(\"tangentialPressure\", eventInitDict.tangentialPressure),\n\t\t\ttiltX: getDescriptorWithFallback(\"tiltX\", eventInitDict.tiltX),\n\t\t\ttiltY: getDescriptorWithFallback(\"tiltY\", eventInitDict.tiltY),\n\t\t\ttwist: getDescriptorWithFallback(\"twist\", eventInitDict.twist),\n\t\t\tpointerType: getDescriptorWithFallback(\"pointerType\", eventInitDict.pointerType),\n\t\t\tisPrimary: getDescriptorWithFallback(\"isPrimary\", eventInitDict.isPrimary)\n\t\t};\n\n\t\tconst mouseEvent = new MouseEvent(type, eventInitDict);\n\t\tObject.defineProperties(mouseEvent, <PropertyDescriptorMap>propsToSet);\n\n\t\t// Update the SEEN_POINTER_IDS Set with the pointer id from the options\n\t\tSEEN_POINTER_IDS.add(propsToSet.pointerId!.value);\n\n\t\t// Return the constructed MouseEvent directly from the constructor\n\t\treturn <PointerEvent>(<any>mouseEvent);\n\t}\n\n\t/**\n\t * This is a no-op. A MouseEvent is returned from the constructor\n\t * @returns {EventTarget[]}\n\t */\n\tpublic deepPath(): EventTarget[] {\n\t\treturn [];\n\t}\n\n\t/**\n\t * This is a no-op. A MouseEvent is returned from the constructor\n\t * @returns {EventTarget[]}\n\t */\n\tpublic composedPath(): EventTarget[] {\n\t\treturn [];\n\t}\n\n\t/**\n\t * This is a no-op. A MouseEvent is returned from the constructor\n\t * @param {string} _keyArg\n\t * @returns {boolean}\n\t */\n\tpublic getModifierState(_keyArg: string): boolean {\n\t\treturn false;\n\t}\n\n\t/**\n\t * This is a no-op. A MouseEvent is returned from the constructor\n\t * @param {string} _type\n\t * @param {boolean} _bubbles\n\t * @param {boolean} _cancelable\n\t */\n\tpublic initEvent(_type: string, _bubbles?: boolean, _cancelable?: boolean): void {}\n\n\t/**\n\t * This is a no-op. A MouseEvent is returned from the constructor\n\t * @param {string} _typeArg\n\t * @param {boolean} _canBubbleArg\n\t * @param {boolean} _cancelableArg\n\t * @param {Window} _viewArg\n\t * @param {number} _detailArg\n\t * @param {number} _screenXArg\n\t * @param {number} _screenYArg\n\t * @param {number} _clientXArg\n\t * @param {number} _clientYArg\n\t * @param {boolean} _ctrlKeyArg\n\t * @param {boolean} _altKeyArg\n\t * @param {boolean} _shiftKeyArg\n\t * @param {boolean} _metaKeyArg\n\t * @param {number} _buttonArg\n\t * @param {EventTarget | null} _relatedTargetArg\n\t */\n\tpublic initMouseEvent(\n\t\t_typeArg: string,\n\t\t_canBubbleArg: boolean,\n\t\t_cancelableArg: boolean,\n\t\t_viewArg: Window,\n\t\t_detailArg: number,\n\t\t_screenXArg: number,\n\t\t_screenYArg: number,\n\t\t_clientXArg: number,\n\t\t_clientYArg: number,\n\t\t_ctrlKeyArg: boolean,\n\t\t_altKeyArg: boolean,\n\t\t_shiftKeyArg: boolean,\n\t\t_metaKeyArg: boolean,\n\t\t_buttonArg: number,\n\t\t_relatedTargetArg: EventTarget | null\n\t): void {}\n\n\t/**\n\t * This is a no-op. A MouseEvent is returned from the constructor\n\t * @param {string} _typeArg\n\t * @param {boolean} _canBubbleArg\n\t * @param {boolean} _cancelableArg\n\t * @param {Window} _viewArg\n\t * @param {number} _detailArg\n\t */\n\tpublic initUIEvent(_typeArg: string, _canBubbleArg: boolean, _cancelableArg: boolean, _viewArg: Window, _detailArg: number): void {}\n\n\t/**\n\t * This is a no-op. A MouseEvent is returned from the constructor\n\t */\n\tpublic preventDefault(): void {}\n\n\t/**\n\t * This is a no-op. A MouseEvent is returned from the constructor\n\t */\n\tpublic stopImmediatePropagation(): void {}\n\n\t/**\n\t * This is a no-op. A MouseEvent is returned from the constructor\n\t */\n\tpublic stopPropagation(): void {}\n}\n","import {PointerEventType} from \"./pointer-event-type\";\nimport {isTouchDevice} from \"./is-touch-device\";\n\n/**\n * Converts the type of a PointerEvent into one that the browser can understand\n * @param {string} pointerEventType\n * @returns {string|null}\n */\nexport function convertPointerEventType(pointerEventType: PointerEventType): string | null {\n\tif (isTouchDevice) {\n\t\tswitch (pointerEventType) {\n\t\t\tcase \"pointerdown\":\n\t\t\t\treturn \"touchstart\";\n\t\t\tcase \"pointermove\":\n\t\t\t\treturn \"touchmove\";\n\t\t\tcase \"pointerup\":\n\t\t\t\treturn \"touchend\";\n\t\t\tcase \"pointercancel\":\n\t\t\t\treturn \"touchcancel\";\n\t\t\tcase \"pointerout\":\n\t\t\tcase \"pointerleave\":\n\t\t\tcase \"pointerenter\":\n\t\t\tcase \"pointerover\":\n\t\t\tcase \"lostpointercapture\":\n\t\t\tcase \"gotpointercapture\":\n\t\t\t\treturn null;\n\t\t}\n\t} else {\n\t\tswitch (pointerEventType) {\n\t\t\tcase \"pointerdown\":\n\t\t\t\treturn \"mousedown\";\n\t\t\tcase \"pointermove\":\n\t\t\t\treturn \"mousemove\";\n\t\t\tcase \"pointerup\":\n\t\t\t\treturn \"mouseup\";\n\t\t\tcase \"pointercancel\":\n\t\t\t\treturn null;\n\t\t\tcase \"pointerout\":\n\t\t\t\treturn \"mouseout\";\n\t\t\tcase \"pointerleave\":\n\t\t\t\treturn \"mouseleave\";\n\t\t\tcase \"pointerenter\":\n\t\t\t\treturn \"mouseenter\";\n\t\t\tcase \"pointerover\":\n\t\t\t\treturn \"mouseover\";\n\t\t\tcase \"lostpointercapture\":\n\t\t\tcase \"gotpointercapture\":\n\t\t\t\treturn null;\n\t\t}\n\t}\n\n\tthrow new TypeError(`Event of type: '${pointerEventType}' could not be handled!`);\n}\n","/**\n * Returns true if the given event target is an element\n * @param {EventTarget|null} eventTarget\n * @returns {eventTarget is Element}\n */\nexport function isElement(eventTarget: EventTarget | null): eventTarget is HTMLElement {\n\treturn eventTarget != null && \"offsetLeft\" in eventTarget;\n}\n","// tslint:disable:no-any\n\n/**\n * Gets the parent of an element, taking into account DocumentFragments, ShadowRoots, as well as the root context (window)\n * @param {EventTarget} currentElement\n * @returns {EventTarget | null}\n */\nexport function getParent(currentElement: EventTarget): EventTarget | null {\n\tif (\"nodeType\" in currentElement && (<Node>currentElement).nodeType === 1) {\n\t\treturn (<Node>currentElement).parentNode;\n\t}\n\n\tif (\"ShadowRoot\" in window && currentElement instanceof (<any>window).ShadowRoot) {\n\t\treturn (<ShadowRoot>currentElement).host;\n\t} else if (currentElement === document) {\n\t\treturn window;\n\t} else if (currentElement instanceof Node) return currentElement.parentNode;\n\n\treturn null;\n}\n","import {getParent} from \"./get-parent\";\n\n// tslint:disable:no-any\n\n/**\n * Finds the nearest root from an element\n * @param {Element} target\n * @returns {DocumentOrShadowRoot}\n */\nexport function findNearestRoot(target: Element): DocumentOrShadowRoot {\n\tlet currentElement: EventTarget | null = target;\n\twhile (currentElement != null) {\n\t\tif (\"ShadowRoot\" in window && currentElement instanceof (<any>window).ShadowRoot) {\n\t\t\t// Assume this is a ShadowRoot\n\t\t\treturn <ShadowRoot>currentElement;\n\t\t}\n\n\t\tconst parent = getParent(currentElement);\n\n\t\tif (parent === currentElement) {\n\t\t\treturn document;\n\t\t}\n\n\t\tcurrentElement = parent;\n\t}\n\treturn document;\n}\n","export const POINTER_ID_TO_CAPTURED_TARGET_MAP: Map<number, EventTarget> = new Map();\n","import {POINTER_EVENT_DEFAULT_VALUES} from \"../pointer-event-default-values\";\nimport {PointerEventType} from \"../pointer-event-type\";\nimport {findNearestRoot} from \"../find-nearest-root\";\nimport {isElement} from \"../is-element\";\nimport {POINTER_ID_TO_CAPTURED_TARGET_MAP} from \"../pointer-capture\";\n\n// tslint:disable:no-any\n\n/**\n * Retrieves the width of a touch\n * @param {Touch} touch\n * @returns {number}\n */\nexport function getTouchWidth(touch: Touch): number {\n\tif (\"radiusX\" in touch) return (<any>touch).radiusX * 2;\n\telse if (\"webkitRadiusX\" in touch) return (<any>touch).webkitRadiusX * 2;\n\telse {\n\t\treturn POINTER_EVENT_DEFAULT_VALUES.width;\n\t}\n}\n\n/**\n * Retrieves the height of a touch\n * @param {Touch} touch\n * @returns {number}\n */\nexport function getTouchHeight(touch: Touch): number {\n\tif (\"radiusY\" in touch) return (<any>touch).radiusY * 2;\n\telse if (\"webkitRadiusY\" in touch) return (<any>touch).webkitRadiusY * 2;\n\telse {\n\t\treturn POINTER_EVENT_DEFAULT_VALUES.height;\n\t}\n}\n\n/**\n * Gets the pressure of the current touch, depending on the type of event\n * @param {PointerEventType} type\n * @param {MouseEvent | Touch} touchOrMouseEvent\n * @returns {number}\n */\nexport function getPressure(type: PointerEventType, touchOrMouseEvent: MouseEvent | Touch): number {\n\tif (type === \"pointerup\") {\n\t\treturn 0;\n\t} else if (\"force\" in touchOrMouseEvent) return (<any>touchOrMouseEvent).force;\n\telse if (\"webkitForce\" in touchOrMouseEvent) return (<any>touchOrMouseEvent).webkitForce;\n\telse {\n\t\treturn POINTER_EVENT_DEFAULT_VALUES.pressure;\n\t}\n}\n\n/**\n * Gets the 'twist' value of a Touch event\n * @param {Touch} touch\n * @returns {number}\n */\nexport function getTouchTwist(touch: Touch): number {\n\tif (\"rotationAngle\" in touch) return (<any>touch).rotationAngle;\n\telse if (\"webkitRotationAngle\" in touch) return (<any>touch).webkitRotationAngle;\n\telse {\n\t\treturn POINTER_EVENT_DEFAULT_VALUES.twist;\n\t}\n}\n\n/**\n * If the event is \"pointermove\", and if the target is given and is an element,\n * use whatever element is currently under the cursor.\n * @param {number} pointerId\n * @param {PointerEventType} type\n * @param {TouchEvent} e\n * @param {Touch} touch\n * @returns {EventTarget | null}\n */\nexport function getTouchTarget(pointerId: number, type: PointerEventType, e: TouchEvent, touch: Touch): EventTarget | null {\n\tconst captured = POINTER_ID_TO_CAPTURED_TARGET_MAP.get(pointerId);\n\tif (captured !== undefined) return captured;\n\n\tif (type !== \"pointermove\" || !isElement(e.target) || !isElement(e.currentTarget)) return e.target;\n\n\treturn findNearestRoot(e.currentTarget).elementFromPoint(touch.clientX, touch.clientY);\n}\n","import {getParent} from \"./get-parent\";\n\n/**\n * Gets the event path from a target\n * @param {Element} target\n * @returns {Element[]}\n */\nexport function getEventPath(target: Element): EventTarget[] {\n\tconst path: EventTarget[] = [];\n\tlet currentElement: EventTarget | null = target;\n\twhile (currentElement != null) {\n\t\tpath.push(currentElement);\n\t\tcurrentElement = getParent(currentElement);\n\n\t\t// If the last Node is equal to the latest parentNode, break immediately\n\t\tif (path[path.length - 1] === currentElement) break;\n\t}\n\treturn path;\n}\n","import {IScrollAncestor} from \"./i-scroll-ancestor\";\nimport {getParent} from \"./get-parent\";\n\n/**\n * Finds the nearest ancestor of an element that can scroll\n * @param {Element} target\n * @returns {IScrollAncestor}\n */\nexport function findNearestAncestorsWithScroll(target: Element): IScrollAncestor[] {\n\tconst path: IScrollAncestor[] = [];\n\tlet currentElement: EventTarget | null = target;\n\twhile (currentElement != null) {\n\t\tif (\"style\" in currentElement) {\n\t\t\tconst computedStyle = getComputedStyle(currentElement);\n\t\t\tconst overflow = computedStyle.getPropertyValue(\"overflow\");\n\t\t\tconst canScrollX = overflow.startsWith(\"visible\") || overflow.startsWith(\"scroll\");\n\t\t\tconst canScrollY = overflow.endsWith(\"visible\") || overflow.endsWith(\"scroll\");\n\t\t\tconst canScroll = canScrollX || canScrollY;\n\t\t\tif (canScroll) {\n\t\t\t\tpath.push({canScrollX, canScrollY, scrollElement: currentElement});\n\t\t\t}\n\t\t}\n\n\t\tconst parent = getParent(currentElement);\n\t\t// If the last Node is equal to the latest parentNode, break immediately\n\t\tif (parent === currentElement) break;\n\t\tcurrentElement = parent;\n\t}\n\treturn path;\n}\n","import {SHARED_DESCRIPTOR_OPTIONS} from \"./shared-descriptor-options\";\n\ntype NullableEventTarget = EventTarget | undefined | null;\n\n/**\n * Overwrites the targets for the given event\n * @param {Event} e\n * @param {NullableEventTarget} target\n * @param {NullableEventTarget} currentTarget\n * @param {NullableEventTarget} relatedTarget\n */\nexport function overwriteTargetsForEvent(e: Event, target?: NullableEventTarget, currentTarget?: NullableEventTarget, relatedTarget?: NullableEventTarget): void {\n\t// Set the original target and currentTarget on the cancel event\n\tObject.defineProperties(e, {\n\t\t...(target === undefined\n\t\t\t? {}\n\t\t\t: {\n\t\t\t\t\ttarget: {\n\t\t\t\t\t\tvalue: target,\n\t\t\t\t\t\t...SHARED_DESCRIPTOR_OPTIONS\n\t\t\t\t\t}\n\t\t\t  }),\n\t\t...(currentTarget === undefined\n\t\t\t? {}\n\t\t\t: {\n\t\t\t\t\tcurrentTarget: {\n\t\t\t\t\t\tvalue: currentTarget,\n\t\t\t\t\t\t...SHARED_DESCRIPTOR_OPTIONS\n\t\t\t\t\t}\n\t\t\t  }),\n\t\t...(relatedTarget === undefined\n\t\t\t? {}\n\t\t\t: {\n\t\t\t\t\trelatedTarget: {\n\t\t\t\t\t\tvalue: relatedTarget,\n\t\t\t\t\t\t...SHARED_DESCRIPTOR_OPTIONS\n\t\t\t\t\t}\n\t\t\t  })\n\t});\n}\n","import {POINTER_EVENT_DEFAULT_VALUES} from \"../pointer-event-default-values\";\n\nexport const currentMousePointerId = POINTER_EVENT_DEFAULT_VALUES.pointerId + 1;\n","import {currentMousePointerId} from \"../mouse/current-mouse-pointer-id\";\n\nexport const currentPenOrTouchPointerId = currentMousePointerId + 1;\n","import {currentPenOrTouchPointerId} from \"./current-touch-pointer-id\";\n\n/**\n * Gets a PointerId from a Touch\n * @param {Touch} touch\n * @returns {number}\n */\nexport function getPointerIdFromTouch(touch: Touch): number {\n\treturn touch.identifier + currentPenOrTouchPointerId;\n}\n","import {PointerEventType} from \"./pointer-event-type\";\n\n/**\n * Returns true if the given event type is cancelable, based on the given event\n * @param {PointerEventType} type\n * @param {MouseEvent | TouchEvent} e\n * @returns {boolean}\n */\nexport function isCancelable(type: PointerEventType, e: MouseEvent | TouchEvent): boolean {\n\tswitch (type) {\n\t\tcase \"pointerover\":\n\t\tcase \"pointerdown\":\n\t\tcase \"pointermove\":\n\t\tcase \"pointerup\":\n\t\t\treturn true;\n\t\tdefault:\n\t\t\treturn e.cancelable;\n\t}\n}\n","import {PointerEventType} from \"./pointer-event-type\";\n\n/**\n * Returns true if the given event type can bubble, based on the given event\n * @param {PointerEventType} type\n * @param {MouseEvent | TouchEvent} e\n * @returns {boolean}\n */\nexport function canBubble(type: PointerEventType, e: MouseEvent | TouchEvent): boolean {\n\tswitch (type) {\n\t\tcase \"pointerover\":\n\t\tcase \"pointerdown\":\n\t\tcase \"pointermove\":\n\t\tcase \"pointerup\":\n\t\tcase \"pointercancel\":\n\t\tcase \"pointerout\":\n\t\tcase \"gotpointercapture\":\n\t\tcase \"lostpointercapture\":\n\t\t\treturn true;\n\t\tdefault:\n\t\t\treturn e.bubbles;\n\t}\n}\n","export const CLONEABLE_EVENT_PROPERTIES: Set<keyof Event> = new Set(<(keyof Event)[]>[\n\t\"cancelBubble\",\n\t\"currentTarget\",\n\t\"defaultPrevented\",\n\t\"eventPhase\",\n\t\"returnValue\",\n\t\"scoped\",\n\t\"srcElement\",\n\t\"timeStamp\",\n\t\"deepPath\",\n\t\"AT_TARGET\",\n\t\"BUBBLING_PHASE\",\n\t\"CAPTURING_PHASE\",\n\t\"NONE\"\n]);\n","import {CLONEABLE_EVENT_PROPERTIES} from \"./cloneable-event-properties\";\n\nexport const CLONEABLE_UI_EVENT_PROPERTIES: Set<keyof UIEvent> = new Set(<(keyof UIEvent)[]>[\n\t...CLONEABLE_EVENT_PROPERTIES,\n\t\"view\",\n\t...(\"sourceCapabilities\" in UIEvent.prototype ? [\"sourceCapabilities\"] : [])\n]);\n","import {PointerEventInit} from \"./pointer-event-init\";\nimport {PointerEventType} from \"./pointer-event-type\";\nimport {PointerEvent} from \"./pointer-event\";\nimport {OptionalOverwrittenMouseEventProperties, RequiredOverwrittenMouseEventProperties} from \"./overwritten-mouse-event-properties\";\nimport {DynamicPointerEventProperty} from \"./dynamic-pointer-event-property\";\nimport {CLONEABLE_UI_EVENT_PROPERTIES} from \"./cloneable-ui-event-properties\";\nimport {SHARED_DESCRIPTOR_OPTIONS} from \"./shared-descriptor-options\";\n\n// tslint:disable:no-any\n\nexport interface ICloneEventAsPointerEventOptions {\n\te: MouseEvent | TouchEvent;\n\tinitOptions: Partial<PointerEventInit>;\n\ttype: PointerEventType;\n\toverwrittenMouseEventProperties: {[Key in RequiredOverwrittenMouseEventProperties]: PropertyDescriptor} & {[Key in OptionalOverwrittenMouseEventProperties]?: PropertyDescriptor};\n\tdynamicPropertiesHandler(): {[Key in DynamicPointerEventProperty]?: PropertyDescriptor};\n}\n\n/**\n * Clones an Event as a new PointerEvent\n * @param {ICloneEventAsPointerEventOptions} options\n * @returns {PointerEvent}\n */\nexport function cloneEventAsPointerEvent({dynamicPropertiesHandler, e, initOptions, overwrittenMouseEventProperties, type}: ICloneEventAsPointerEventOptions): PointerEvent {\n\t// Create a new PointerEvent\n\tconst clone = new PointerEvent(type, initOptions);\n\n\t// Preventing default on the clone will also prevent default on the original event\n\tconst rawPreventDefault = clone.preventDefault;\n\tconst rawStopPropagation = clone.stopPropagation;\n\tconst rawStopImmediatePropagation = clone.stopImmediatePropagation;\n\n\tclone.preventDefault = function() {\n\t\trawPreventDefault.call(this);\n\t\tif (!e.defaultPrevented) {\n\t\t\te.preventDefault();\n\t\t}\n\t};\n\n\t// Stopping propagation on the clone will also stop propagation on the original event\n\tclone.stopPropagation = function() {\n\t\trawStopPropagation.call(this);\n\t\te.stopPropagation();\n\t};\n\n\t// Stopping immediate propagation on the clone will also stop immediate propagation on the original event\n\tclone.stopImmediatePropagation = function() {\n\t\trawStopImmediatePropagation.call(this);\n\t\te.stopImmediatePropagation();\n\t};\n\n\tlet additionalPropsToSet: PropertyDescriptorMap = {};\n\tCLONEABLE_UI_EVENT_PROPERTIES.forEach(\n\t\tkey =>\n\t\t\t(additionalPropsToSet[key] = {\n\t\t\t\tvalue: e[key],\n\t\t\t\t...SHARED_DESCRIPTOR_OPTIONS\n\t\t\t})\n\t);\n\n\tadditionalPropsToSet = {\n\t\t...additionalPropsToSet,\n\t\t...(<PropertyDescriptorMap>overwrittenMouseEventProperties),\n\t\t// Handle all dynamic properties based on the type of PointerEvent\n\t\t...(<PropertyDescriptorMap>dynamicPropertiesHandler())\n\t};\n\n\t// Set MouseEvent (and inherited UIEvent) properties on the event object\n\tObject.defineProperties(clone, additionalPropsToSet);\n\treturn clone;\n}\n","import {PointerEventType} from \"./pointer-event-type\";\n\nexport const pointerIdToCancelFiredSet: Set<number> = new Set();\n\n/**\n * Updates the PointerIdToCancelFiredSet\n * @param {{type: PointerEventType, pointerId: number}} e\n */\nexport function updatePointerIdToCancelFiredSet({type, pointerId}: {type: PointerEventType; pointerId: number}): void {\n\tswitch (type) {\n\t\tcase \"pointercancel\":\n\t\t\tpointerIdToCancelFiredSet.add(pointerId);\n\t\t\tbreak;\n\n\t\tcase \"pointerdown\":\n\t\tcase \"pointerup\":\n\t\t\tpointerIdToCancelFiredSet.delete(pointerId);\n\t\t\tbreak;\n\t}\n}\n","import {PointerEvent} from \"./pointer-event\";\n\n/**\n * Invokes a listener with the given event\n * @param {PointerEvent} event\n * @param {EventListenerOrEventListenerObject} listener\n */\nexport function invokeListener(event: PointerEvent, listener: EventListenerOrEventListenerObject): void {\n\ttypeof listener === \"function\" ? listener(event as Event) : listener.handleEvent(event);\n}\n","import {getParent} from \"./get-parent\";\nimport {ITouchActionAncestor, TouchAction} from \"./i-touch-action-ancestor\";\n\nconst styleDeclarationPropertyName = <keyof CSSStyleDeclaration>\"touchAction\";\nconst styleAttributePropertyName = \"touch-action\";\nconst styleAttributePropertyNameRegex = new RegExp(`${styleAttributePropertyName}:\\\\s*([^;]*)`);\n\n/**\n * Finds all ancestors and their touch-action values\n * @param {Element} target\n * @returns {ITouchActionAncestor[]}\n */\nexport function findNearestAncestorsWithTouchAction(target: Element): ITouchActionAncestor[] {\n\tconst path: ITouchActionAncestor[] = [];\n\tlet currentElement: EventTarget | null = target;\n\twhile (currentElement != null) {\n\t\tlet touchActionPropertyValue: string | null = null;\n\t\tif (\"style\" in currentElement) {\n\t\t\ttouchActionPropertyValue = (<HTMLElement>currentElement).style[styleDeclarationPropertyName];\n\n\t\t\tif (touchActionPropertyValue == null || touchActionPropertyValue === \"\") {\n\t\t\t\tconst styleAttributeValue = (<HTMLElement>currentElement).getAttribute(\"style\");\n\t\t\t\tif (styleAttributeValue != null && styleAttributeValue.includes(styleAttributePropertyName)) {\n\t\t\t\t\tconst match = styleAttributeValue.match(styleAttributePropertyNameRegex);\n\t\t\t\t\tif (match != null) {\n\t\t\t\t\t\tconst [, values] = match;\n\t\t\t\t\t\ttouchActionPropertyValue = values;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (touchActionPropertyValue == null || touchActionPropertyValue === \"\") {\n\t\t\t\tconst attributeValue = target.getAttribute(\"touch-action\");\n\t\t\t\tif (attributeValue != null && attributeValue !== \"\") {\n\t\t\t\t\ttouchActionPropertyValue = attributeValue;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (touchActionPropertyValue != null) {\n\t\t\t\tpath.push({\n\t\t\t\t\telement: currentElement,\n\t\t\t\t\ttouchAction: new Set(<TouchAction[]>touchActionPropertyValue.split(/\\s/).map(part => part.trim()))\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\tconst parent = getParent(currentElement);\n\t\t// If the last Node is equal to the latest parentNode, break immediately\n\t\tif (parent === currentElement) break;\n\t\tcurrentElement = parent;\n\t}\n\treturn path;\n}\n","import {SHARED_DESCRIPTOR_OPTIONS} from \"../shared-descriptor-options\";\nimport {PointerEventType} from \"../pointer-event-type\";\nimport {PointerEvent} from \"../pointer-event\";\nimport {DynamicPointerEventProperty} from \"../dynamic-pointer-event-property\";\nimport {POINTER_EVENT_DEFAULT_VALUES} from \"../pointer-event-default-values\";\nimport {isElement} from \"../is-element\";\nimport {getPressure, getTouchHeight, getTouchTarget, getTouchTwist, getTouchWidth} from \"./get-touch-properties\";\nimport {getEventPath} from \"../get-event-path\";\nimport {IScrollAncestor} from \"../i-scroll-ancestor\";\nimport {findNearestAncestorsWithScroll} from \"../find-nearest-ancestors-with-scroll\";\nimport {overwriteTargetsForEvent} from \"../overwrite-targets-for-event\";\nimport {getPointerIdFromTouch} from \"./get-pointer-id-from-touch\";\nimport {IPointerEventInitRequired} from \"../i-pointer-event-init-required\";\nimport {isCancelable} from \"../is-cancelable\";\nimport {canBubble} from \"../can-bubble\";\nimport {OptionalOverwrittenMouseEventProperties, RequiredOverwrittenMouseEventProperties} from \"../overwritten-mouse-event-properties\";\nimport {cloneEventAsPointerEvent} from \"../clone-event-as-pointer-event\";\nimport {pointerIdToCancelFiredSet, updatePointerIdToCancelFiredSet} from \"../pointer-id-to-cancel-fired\";\nimport {invokeListener} from \"../invoke-listener\";\nimport {POINTER_ID_TO_CAPTURED_TARGET_MAP} from \"../pointer-capture\";\nimport {findNearestAncestorsWithTouchAction} from \"../find-nearest-ancestors-with-touch-action\";\n\n// tslint:disable:no-any\n\n// tslint:disable:no-identical-conditions\n\n// tslint:disable:no-collapsible-if\n\n/**\n * The name of the property to extend TouchEvents with\n * @type {string}\n */\nconst TOUCH_ACTION_PROPERTY_NAME = \"___touchAction___\";\n\n/**\n * How great the different between a touchstart and touchmove before it is determined that panning is undergoing\n * @type {number}\n */\nconst PANNING_DIFFERENCE_THRESHOLD: number = 5;\n\n/**\n * The PointerEvents to track during scrolling\n * @type {(string)[]}\n */\nconst POINTER_EVENTS_TO_TRACK: PointerEventType[] = [\"pointercancel\", \"pointerleave\", \"pointerup\", \"pointerout\"];\nconst LAST_POINTER_DOWN_EVENT_FOR_POINTER_ID: Map<number, PointerEvent> = new Map();\n\n/**\n * Handles all those dynamic properties that are specific for a specific PointerEvent type on Touch devices\n * @param {number} pointerId\n * @param {PointerEventType} type\n * @param {Touch} currentTouch\n * @param {TouchEvent} e\n * @returns {{[Key in DynamicPointerEventProperty]: PropertyDescriptor}}\n */\nfunction handleDynamicPropertiesForPointerEventOnTouch(pointerId: number, type: PointerEventType, currentTouch: Touch, e: TouchEvent): {[Key in DynamicPointerEventProperty]: PropertyDescriptor} {\n\tswitch (type) {\n\t\tcase \"pointerdown\":\n\t\tcase \"pointermove\":\n\t\tcase \"pointerup\":\n\t\tcase \"pointerover\":\n\t\tcase \"pointerenter\":\n\t\tcase \"gotpointercapture\":\n\t\tcase \"lostpointercapture\":\n\t\t\treturn handleDynamicPropertiesForContactTouch(pointerId, type, currentTouch, e);\n\n\t\tcase \"pointercancel\":\n\t\tcase \"pointerout\":\n\t\tcase \"pointerleave\":\n\t\t\treturn handleDynamicPropertiesForNoContactTouch(pointerId, type, currentTouch, e);\n\n\t\tdefault:\n\t\t\tthrow new TypeError(`Error: Could not handle dynamic properties for a PointerEvent of type: '${type}'`);\n\t}\n}\n\n/**\n * Handles all those dynamic properties that are specific for pointercancel/pointerleave/pointerout events on Touch devices\n * @param {number} pointerId\n * @param {PointerEventType} type\n * @param {Touch} touch\n * @param {TouchEvent} e\n * @returns {{[Key in DynamicPointerEventProperty]: PropertyDescriptor}}\n */\nfunction handleDynamicPropertiesForNoContactTouch(pointerId: number, type: PointerEventType, touch: Touch, e: TouchEvent): {[Key in DynamicPointerEventProperty]: PropertyDescriptor} {\n\treturn {\n\t\ttarget: {\n\t\t\tvalue: getTouchTarget(pointerId, type, e, touch),\n\t\t\t...SHARED_DESCRIPTOR_OPTIONS\n\t\t},\n\n\t\t// For everything other than pointerover/pointerleave/pointerout/pointerenter, the related target should be null\n\t\t// https://www.w3.org/TR/pointerevents2/\n\t\trelatedTarget: {\n\t\t\tvalue: null,\n\t\t\t...SHARED_DESCRIPTOR_OPTIONS\n\t\t},\n\t\tbutton: {\n\t\t\tvalue: 0,\n\t\t\t...SHARED_DESCRIPTOR_OPTIONS\n\t\t},\n\t\tbuttons: {\n\t\t\tvalue: 0,\n\t\t\t...SHARED_DESCRIPTOR_OPTIONS\n\t\t},\n\t\tclientX: {\n\t\t\tvalue: 0,\n\t\t\t...SHARED_DESCRIPTOR_OPTIONS\n\t\t},\n\t\tclientY: {\n\t\t\tvalue: 0,\n\t\t\t...SHARED_DESCRIPTOR_OPTIONS\n\t\t},\n\t\twidth: {\n\t\t\tvalue: POINTER_EVENT_DEFAULT_VALUES.width,\n\t\t\t...SHARED_DESCRIPTOR_OPTIONS\n\t\t},\n\t\theight: {\n\t\t\tvalue: POINTER_EVENT_DEFAULT_VALUES.height,\n\t\t\t...SHARED_DESCRIPTOR_OPTIONS\n\t\t},\n\t\tpressure: {\n\t\t\tvalue: POINTER_EVENT_DEFAULT_VALUES.pressure,\n\t\t\t...SHARED_DESCRIPTOR_OPTIONS\n\t\t},\n\t\ttangentialPressure: {\n\t\t\tvalue: POINTER_EVENT_DEFAULT_VALUES.tangentialPressure,\n\t\t\t...SHARED_DESCRIPTOR_OPTIONS\n\t\t},\n\t\ttiltX: {\n\t\t\tvalue: POINTER_EVENT_DEFAULT_VALUES.tiltX,\n\t\t\t...SHARED_DESCRIPTOR_OPTIONS\n\t\t},\n\t\ttiltY: {\n\t\t\tvalue: POINTER_EVENT_DEFAULT_VALUES.tiltY,\n\t\t\t...SHARED_DESCRIPTOR_OPTIONS\n\t\t},\n\t\ttwist: {\n\t\t\tvalue: POINTER_EVENT_DEFAULT_VALUES.twist,\n\t\t\t...SHARED_DESCRIPTOR_OPTIONS\n\t\t},\n\t\tlayerX: {\n\t\t\tvalue: 0,\n\t\t\t...SHARED_DESCRIPTOR_OPTIONS\n\t\t},\n\t\tlayerY: {\n\t\t\tvalue: 0,\n\t\t\t...SHARED_DESCRIPTOR_OPTIONS\n\t\t},\n\t\tmovementX: {\n\t\t\tvalue: 0,\n\t\t\t...SHARED_DESCRIPTOR_OPTIONS\n\t\t},\n\t\tmovementY: {\n\t\t\tvalue: 0,\n\t\t\t...SHARED_DESCRIPTOR_OPTIONS\n\t\t},\n\t\toffsetX: {\n\t\t\tvalue: 0,\n\t\t\t...SHARED_DESCRIPTOR_OPTIONS\n\t\t},\n\t\toffsetY: {\n\t\t\tvalue: 0,\n\t\t\t...SHARED_DESCRIPTOR_OPTIONS\n\t\t},\n\t\tpageX: {\n\t\t\tvalue: 0,\n\t\t\t...SHARED_DESCRIPTOR_OPTIONS\n\t\t},\n\t\tpageY: {\n\t\t\tvalue: 0,\n\t\t\t...SHARED_DESCRIPTOR_OPTIONS\n\t\t},\n\t\tscreenX: {\n\t\t\tvalue: 0,\n\t\t\t...SHARED_DESCRIPTOR_OPTIONS\n\t\t},\n\t\tscreenY: {\n\t\t\tvalue: 0,\n\t\t\t...SHARED_DESCRIPTOR_OPTIONS\n\t\t},\n\t\tx: {\n\t\t\tvalue: 0,\n\t\t\t...SHARED_DESCRIPTOR_OPTIONS\n\t\t},\n\t\ty: {\n\t\t\tvalue: 0,\n\t\t\t...SHARED_DESCRIPTOR_OPTIONS\n\t\t}\n\t};\n}\n\n/**\n * Handles all those dynamic properties that are specific for pointercancel events on Touch devices\n * @param {number} pointerId\n * @param {string} type\n * @param {Touch} currentTouch\n * @param {TouchEvent} e\n * @returns {{[Key in DynamicPointerEventProperty]: PropertyDescriptor}}\n */\nfunction handleDynamicPropertiesForContactTouch(\n\tpointerId: number,\n\ttype: \"pointerdown\" | \"pointermove\" | \"pointerover\" | \"pointerenter\" | \"pointerup\" | \"gotpointercapture\" | \"lostpointercapture\",\n\tcurrentTouch: Touch,\n\te: TouchEvent\n): {[Key in DynamicPointerEventProperty]: PropertyDescriptor} {\n\tconst offsetX = currentTouch.clientX - (isElement(currentTouch.target) ? currentTouch.target.offsetLeft : 0);\n\tconst offsetY = currentTouch.clientY - (isElement(currentTouch.target) ? currentTouch.target.offsetTop : 0);\n\tconst offsetParent = \"offsetParent\" in currentTouch.target ? <HTMLElement>currentTouch.target : null;\n\tconst layerX = offsetParent == null ? offsetX : currentTouch.clientX - offsetParent.offsetLeft;\n\tconst layerY = offsetParent == null ? offsetY : currentTouch.clientY - offsetParent.offsetTop;\n\n\treturn {\n\t\ttarget: {\n\t\t\tvalue: getTouchTarget(pointerId, type, e, currentTouch),\n\t\t\t...SHARED_DESCRIPTOR_OPTIONS\n\t\t},\n\n\t\t// For everything other than pointerover/pointerleave/pointerout/pointerenter, the related target should be null\n\t\t// https://www.w3.org/TR/pointerevents2/\n\t\trelatedTarget: {\n\t\t\tvalue: null,\n\t\t\t...SHARED_DESCRIPTOR_OPTIONS\n\t\t},\n\n\t\tbutton: {\n\t\t\t// Touch contact are indicated by the button value 0\n\t\t\tvalue: type === \"gotpointercapture\" ? -1 : 0,\n\t\t\t...SHARED_DESCRIPTOR_OPTIONS\n\t\t},\n\n\t\tbuttons: {\n\t\t\t// During Touch contact, there is a single button in use, hence the value of 1\n\t\t\tvalue: type === \"pointerup\" || type === \"lostpointercapture\" ? 0 : 1,\n\t\t\t...SHARED_DESCRIPTOR_OPTIONS\n\t\t},\n\n\t\tclientX: {\n\t\t\tvalue: currentTouch.clientX,\n\t\t\t...SHARED_DESCRIPTOR_OPTIONS\n\t\t},\n\n\t\tclientY: {\n\t\t\tvalue: currentTouch.clientY,\n\t\t\t...SHARED_DESCRIPTOR_OPTIONS\n\t\t},\n\n\t\tscreenX: {\n\t\t\tvalue: currentTouch.screenX,\n\t\t\t...SHARED_DESCRIPTOR_OPTIONS\n\t\t},\n\n\t\tscreenY: {\n\t\t\tvalue: currentTouch.screenY,\n\t\t\t...SHARED_DESCRIPTOR_OPTIONS\n\t\t},\n\n\t\tpageX: {\n\t\t\tvalue: currentTouch.pageX,\n\t\t\t...SHARED_DESCRIPTOR_OPTIONS\n\t\t},\n\n\t\tpageY: {\n\t\t\tvalue: currentTouch.pageY,\n\t\t\t...SHARED_DESCRIPTOR_OPTIONS\n\t\t},\n\n\t\tx: {\n\t\t\tvalue: currentTouch.clientX,\n\t\t\t...SHARED_DESCRIPTOR_OPTIONS\n\t\t},\n\n\t\ty: {\n\t\t\tvalue: currentTouch.clientY,\n\t\t\t...SHARED_DESCRIPTOR_OPTIONS\n\t\t},\n\n\t\toffsetX: {\n\t\t\tvalue: offsetX,\n\t\t\t...SHARED_DESCRIPTOR_OPTIONS\n\t\t},\n\n\t\toffsetY: {\n\t\t\tvalue: offsetY,\n\t\t\t...SHARED_DESCRIPTOR_OPTIONS\n\t\t},\n\n\t\tlayerX: {\n\t\t\tvalue: layerX,\n\t\t\t...SHARED_DESCRIPTOR_OPTIONS\n\t\t},\n\n\t\tlayerY: {\n\t\t\tvalue: layerY,\n\t\t\t...SHARED_DESCRIPTOR_OPTIONS\n\t\t},\n\n\t\t// For both pointerdown and pointer up events, there has been no movement since the previous event. This is only applicable to pointermove events\n\t\tmovementX: {\n\t\t\tvalue: 0,\n\t\t\t...SHARED_DESCRIPTOR_OPTIONS\n\t\t},\n\n\t\t// For both pointerdown and pointer up events, there has been no movement since the previous event. This is only applicable to pointermove events\n\t\tmovementY: {\n\t\t\tvalue: 0,\n\t\t\t...SHARED_DESCRIPTOR_OPTIONS\n\t\t},\n\n\t\t// The width and height in CSS pixels of the contact geometry of the pointer.\n\t\t// Will use the radiusX or webkitRadiusX properties of Touch Events to determine this\n\t\t// https://www.w3.org/TR/pointerevents/#pointerevent-interface\n\t\twidth: {\n\t\t\tvalue: getTouchWidth(currentTouch),\n\t\t\t...SHARED_DESCRIPTOR_OPTIONS\n\t\t},\n\t\theight: {\n\t\t\tvalue: getTouchHeight(currentTouch),\n\t\t\t...SHARED_DESCRIPTOR_OPTIONS\n\t\t},\n\n\t\t// Some browsers like iOS safari reports force values for touches which we can use to determine the pressure.\n\t\t// For \"pointerup\" events, the pressure will always be 0\n\t\t// https://www.w3.org/TR/pointerevents/#pointerevent-interface\n\t\tpressure: {\n\t\t\tvalue: getPressure(type, currentTouch),\n\t\t\t...SHARED_DESCRIPTOR_OPTIONS\n\t\t},\n\n\t\t// There is no known way to detect the tangential pressure currently, so we just default to setting this to 0\n\t\t// https://www.w3.org/TR/pointerevents/#pointerevent-interface\n\t\ttangentialPressure: {\n\t\t\tvalue: POINTER_EVENT_DEFAULT_VALUES.tangentialPressure,\n\t\t\t...SHARED_DESCRIPTOR_OPTIONS\n\t\t},\n\n\t\t// Touch pointers doesn't support tilt. Default to values of zero\n\t\t// https://www.w3.org/TR/pointerevents/#pointerevent-interface\n\t\ttiltX: {\n\t\t\tvalue: POINTER_EVENT_DEFAULT_VALUES.tiltX,\n\t\t\t...SHARED_DESCRIPTOR_OPTIONS\n\t\t},\n\t\ttiltY: {\n\t\t\tvalue: POINTER_EVENT_DEFAULT_VALUES.tiltY,\n\t\t\t...SHARED_DESCRIPTOR_OPTIONS\n\t\t},\n\n\t\t// Gets the rotation angle, in degrees, of the contact area ellipse\n\t\t// https://www.w3.org/TR/pointerevents/#pointerevent-interface\n\t\ttwist: {\n\t\t\tvalue: getTouchTwist(currentTouch),\n\t\t\t...SHARED_DESCRIPTOR_OPTIONS\n\t\t}\n\t};\n}\n\n/**\n * Handles whatever logic needs to come before any given kind of TouchEvent\n * @param {PointerEventType} pointerEventType\n * @param {EventTarget} eventTarget\n * @param {TouchEvent} e\n * @param {PointerEvent[]} pointerEvents\n */\nfunction handlePrePointerEventForTouch(pointerEventType: PointerEventType, eventTarget: EventTarget, e: TouchEvent, pointerEvents: PointerEvent[]): void {\n\tswitch (pointerEventType) {\n\t\tcase \"pointermove\":\n\t\t\tif (isElement(e.target) && isElement(e.currentTarget)) {\n\t\t\t\tconst touchAction = e[<keyof TouchEvent>TOUCH_ACTION_PROPERTY_NAME];\n\n\t\t\t\t// If only panning in the [x|y]-axis is allowed, test if panning is attempted in the [x|y]-axis and prevent it if that is the case\n\t\t\t\tif (touchAction !== \"auto\") {\n\t\t\t\t\tpointerEvents.forEach(({pointerId, clientX, clientY}) => {\n\t\t\t\t\t\tif (e.cancelable && !e.defaultPrevented) {\n\t\t\t\t\t\t\t// Take the last known pointer down event\n\t\t\t\t\t\t\tconst pointerDownEvent = LAST_POINTER_DOWN_EVENT_FOR_POINTER_ID.get(pointerId);\n\t\t\t\t\t\t\tif (pointerDownEvent == null) return;\n\n\t\t\t\t\t\t\tconst diffX = clientX - pointerDownEvent.clientX;\n\t\t\t\t\t\t\tconst absDiffX = Math.abs(diffX);\n\t\t\t\t\t\t\tconst diffY = clientY - pointerDownEvent.clientY;\n\t\t\t\t\t\t\tconst absDiffY = Math.abs(diffY);\n\t\t\t\t\t\t\tconst isPanningX = absDiffX > PANNING_DIFFERENCE_THRESHOLD && absDiffX > absDiffY;\n\t\t\t\t\t\t\tconst isPanningY = absDiffY > PANNING_DIFFERENCE_THRESHOLD && absDiffY > absDiffX;\n\t\t\t\t\t\t\tconst isPanningUp = diffY > 0;\n\t\t\t\t\t\t\tconst isPanningDown = diffY < 0;\n\t\t\t\t\t\t\tconst isPanningLeft = diffX > 0;\n\t\t\t\t\t\t\tconst isPanningRight = diffX < 0;\n\n\t\t\t\t\t\t\tif (touchAction === \"none\") {\n\t\t\t\t\t\t\t\t// Prevent touchmove from performing its default behavior if horizontal or vertical movement happens and none if allowed\n\t\t\t\t\t\t\t\tif (isPanningX || isPanningY) {\n\t\t\t\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} else if (touchAction === \"pan-y\") {\n\t\t\t\t\t\t\t\t// Prevent touchmove from performing its default behavior if horizontal movement happens, but only vertical scrolling is allowed\n\t\t\t\t\t\t\t\tif (isPanningX) {\n\t\t\t\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} else if (touchAction === \"pan-y pan-left\") {\n\t\t\t\t\t\t\t\t// Prevent touchmove from performing its default behavior if right-going horizontal movement happens\n\t\t\t\t\t\t\t\tif (isPanningRight) {\n\t\t\t\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} else if (touchAction === \"pan-y pan-right\") {\n\t\t\t\t\t\t\t\t// Prevent touchmove from performing its default behavior if left-going horizontal movement happens\n\t\t\t\t\t\t\t\tif (isPanningLeft) {\n\t\t\t\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} else if (touchAction === \"pan-up\") {\n\t\t\t\t\t\t\t\tif (!isPanningUp) {\n\t\t\t\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} else if (touchAction === \"pan-down\") {\n\t\t\t\t\t\t\t\tif (!isPanningDown) {\n\t\t\t\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} else if (touchAction === \"pan-left\") {\n\t\t\t\t\t\t\t\tif (!isPanningLeft) {\n\t\t\t\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} else if (touchAction === \"pan-right\") {\n\t\t\t\t\t\t\t\tif (!isPanningRight) {\n\t\t\t\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} else if (touchAction === \"pan-x\") {\n\t\t\t\t\t\t\t\t// Prevent touchmove from performing its default behavior if vertical movement happens, but only horizontal scrolling is allowed\n\t\t\t\t\t\t\t\tif (isPanningY) {\n\t\t\t\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} else if (touchAction === \"pan-x pan-up\") {\n\t\t\t\t\t\t\t\t// Prevent touchmove from performing its default behavior if down-going vertical movement happens\n\t\t\t\t\t\t\t\tif (isPanningDown) {\n\t\t\t\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} else if (touchAction === \"pan-x pan-down\") {\n\t\t\t\t\t\t\t\t// Prevent touchmove from performing its default behavior if up-going vertical movement happens\n\t\t\t\t\t\t\t\tif (isPanningUp) {\n\t\t\t\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\t// If the target is not equal to the original target\n\t\t\t\tif (e.target !== e.currentTarget) {\n\t\t\t\t\t// If none of the touches has a pointer id that is used for capturing pointer events and binding them to the current target of the event, do nothing\n\t\t\t\t\tif (Array.from(e.changedTouches).some(touch => POINTER_ID_TO_CAPTURED_TARGET_MAP.has(getPointerIdFromTouch(touch)))) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Fire a \"pointercancel\" event if/when the target is no longer equal to the original target\n\t\t\t\t\tcreatePointerEventsForTouchOfTypeAndDispatch(\"pointercancel\", e, eventTarget);\n\t\t\t\t}\n\t\t\t}\n\t\t\tbreak;\n\n\t\tcase \"pointerdown\":\n\t\t\t// All \"pointerdown\" events must be preceded by a \"pointerover\" event\n\t\t\t// https://www.w3.org/TR/pointerevents/#the-pointerover-event\n\t\t\tcreatePointerEventsForTouchOfTypeAndDispatch(\"pointerover\", e, eventTarget);\n\n\t\t\t// All \"pointerdown\" events must be preceded by a \"pointerenter\" event\n\t\t\t// https://www.w3.org/TR/pointerevents/#the-pointerover-event\n\t\t\tcreatePointerEventsForTouchOfTypeAndDispatch(\"pointerenter\", e, eventTarget);\n\t\t\tbreak;\n\t}\n}\n\n/**\n * Handles whatever logic needs to follow any given kind of TouchEvent\n * @param {PointerEventType} pointerEventType\n * @param {EventTarget} eventTarget\n * @param {TouchEvent} e\n */\nfunction handlePostPointerEventForTouch(pointerEventType: PointerEventType, eventTarget: EventTarget, e: TouchEvent): void {\n\t// Store a reference to the event target and event currentTarget. These may change in the meantime, but we are going to need them when cloning the event\n\tconst target = e.target;\n\tconst currentTarget = e.currentTarget;\n\n\t// Immediately after pointerup or pointercancel events, a user agent MUST clear any pointer capture target overrides\n\t// https://www.w3.org/TR/pointerevents/#implicit-release-of-pointer-capture\n\tif (pointerEventType === \"pointerup\" || pointerEventType === \"pointercancel\") {\n\t\tArray.from(e.changedTouches).forEach(touch => {\n\t\t\tconst pointerId = getPointerIdFromTouch(touch);\n\t\t\tconst match = POINTER_ID_TO_CAPTURED_TARGET_MAP.get(pointerId);\n\t\t\tif (match != null && isElement(match)) {\n\t\t\t\tmatch.releasePointerCapture(pointerId);\n\t\t\t}\n\t\t});\n\t}\n\n\tswitch (pointerEventType) {\n\t\tcase \"pointerdown\":\n\t\t\t// The equivalent event is \"touchcancel\" which won't fire when the finger leaves the element\n\t\t\t// or when scrolling happens. We need to enforce this behavior to follow the spec.\n\t\t\t// https://www.w3.org/TR/pointerevents2/#the-pointercancel-event\n\t\t\tif (isElement(e.currentTarget)) {\n\t\t\t\t/**\n\t\t\t\t * We need to listen for \"pointermove\" events to continuously monitor and update the target\n\t\t\t\t */\n\t\t\t\tconst pointerMoveHandler = () => {};\n\n\t\t\t\t/**\n\t\t\t\t * We need to make sure to unbind the handler to avoid memory leaks\n\t\t\t\t */\n\t\t\t\tconst unbindPointerMoveHandler = () => {\n\t\t\t\t\teventTarget.removeEventListener(\"pointermove\", pointerMoveHandler);\n\n\t\t\t\t\tif (POINTER_EVENTS_TO_TRACK != null) {\n\t\t\t\t\t\tPOINTER_EVENTS_TO_TRACK.forEach(type => {\n\t\t\t\t\t\t\teventTarget.removeEventListener(type, unbindPointerMoveHandler);\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t};\n\n\t\t\t\teventTarget.addEventListener(\"pointermove\", pointerMoveHandler);\n\n\t\t\t\tlet ancestorsWithScroll: IScrollAncestor[] | null = findNearestAncestorsWithScroll(e.currentTarget);\n\t\t\t\tlet hasFiredScrollEvent: boolean = false;\n\n\t\t\t\t/**\n\t\t\t\t * Unbind the scroll listeners to avoid memory leaks and unnecessary computations\n\t\t\t\t */\n\t\t\t\tconst unbindScrollListeners = () => {\n\t\t\t\t\t// Then remove all listeners for scroll events\n\t\t\t\t\tif (ancestorsWithScroll != null) {\n\t\t\t\t\t\tancestorsWithScroll.forEach(({scrollElement}) => scrollElement.removeEventListener(\"scroll\", scrollHandler));\n\t\t\t\t\t\tancestorsWithScroll = null;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (POINTER_EVENTS_TO_TRACK != null) {\n\t\t\t\t\t\tPOINTER_EVENTS_TO_TRACK.forEach(type => {\n\t\t\t\t\t\t\teventTarget.removeEventListener(type, unbindScrollListeners);\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t};\n\n\t\t\t\t/**\n\t\t\t\t * When a scroll event happens, fire a 'pointercancel' event on the element\n\t\t\t\t */\n\t\t\t\tconst scrollHandler = () => {\n\t\t\t\t\tif (!hasFiredScrollEvent) {\n\t\t\t\t\t\thasFiredScrollEvent = true;\n\n\t\t\t\t\t\t// Re-set the target and currentTarget to the values the event had before.\n\t\t\t\t\t\t// It may have changed in the meantime\n\t\t\t\t\t\toverwriteTargetsForEvent(e, target, currentTarget);\n\n\t\t\t\t\t\t// Construct a new event and fire it on the EventTarget\n\t\t\t\t\t\tcreatePointerEventsForTouchOfTypeAndDispatch(\"pointercancel\", e, eventTarget);\n\t\t\t\t\t}\n\n\t\t\t\t\tunbindScrollListeners();\n\t\t\t\t};\n\n\t\t\t\t// Hook up listeners for \"scroll\" events on all scroll ancestors\n\t\t\t\tancestorsWithScroll.forEach(({scrollElement}) => scrollElement.addEventListener(\"scroll\", scrollHandler));\n\n\t\t\t\t// Make sure to also unbind the scroll handlers on various related PointerEvents\n\t\t\t\tPOINTER_EVENTS_TO_TRACK.forEach(pointerEventToTrack => {\n\t\t\t\t\teventTarget.addEventListener(pointerEventToTrack, unbindScrollListeners);\n\t\t\t\t\teventTarget.addEventListener(pointerEventToTrack, unbindPointerMoveHandler);\n\t\t\t\t});\n\t\t\t}\n\t\t\tbreak;\n\n\t\tcase \"pointercancel\":\n\t\t\t// If we're having to do with a 'pointercancel' event,\n\t\t\t// The spec requires a \"pointerout\" and \"pointerleave\" event to be fired immediately after.\n\t\t\t// https://www.w3.org/TR/pointerevents2/#the-pointercancel-event\n\t\t\tcreatePointerEventsForTouchOfTypeAndDispatch(\"pointerout\", e, eventTarget);\n\t\t\tcreatePointerEventsForTouchOfTypeAndDispatch(\"pointerleave\", e, eventTarget);\n\t\t\tbreak;\n\t}\n}\n\n/**\n * Handles touch-action values for an event\n * @param {PointerEventType} _type\n * @param {PointerEvent} e\n */\nfunction handleTouchAction(_type: PointerEventType, e: TouchEvent): void {\n\t// Only consider pointerdown events here\n\tif (!isElement(e.currentTarget)) return;\n\n\tconst touchActionAncestors = findNearestAncestorsWithTouchAction(e.currentTarget);\n\tconst hasTouchActionNoneAncestor = touchActionAncestors.some(ancestor => ancestor.touchAction.has(\"none\"));\n\tconst hasPanXAncestor = touchActionAncestors.some(ancestor => ancestor.touchAction.has(\"pan-x\"));\n\tconst hasPanYAncestor = touchActionAncestors.some(ancestor => ancestor.touchAction.has(\"pan-y\"));\n\tconst hasPanUpAncestor = touchActionAncestors.some(ancestor => ancestor.touchAction.has(\"pan-up\"));\n\tconst hasPanDownAncestor = touchActionAncestors.some(ancestor => ancestor.touchAction.has(\"pan-down\"));\n\tconst hasPanLeftAncestor = touchActionAncestors.some(ancestor => ancestor.touchAction.has(\"pan-left\"));\n\tconst hasPanRightAncestor = touchActionAncestors.some(ancestor => ancestor.touchAction.has(\"pan-right\"));\n\n\tconst canPanX = hasTouchActionNoneAncestor || hasPanXAncestor || (hasPanLeftAncestor && hasPanRightAncestor);\n\tconst canPanY = hasTouchActionNoneAncestor || hasPanYAncestor || (hasPanUpAncestor && hasPanDownAncestor);\n\n\tif (canPanX && canPanY) {\n\t\tObject.defineProperty(e, TOUCH_ACTION_PROPERTY_NAME, {value: \"none\"});\n\t} else if (canPanX) {\n\t\tif (hasPanUpAncestor) {\n\t\t\tObject.defineProperty(e, TOUCH_ACTION_PROPERTY_NAME, {\n\t\t\t\tvalue: \"pan-x pan-up\"\n\t\t\t});\n\t\t} else if (hasPanDownAncestor) {\n\t\t\tObject.defineProperty(e, TOUCH_ACTION_PROPERTY_NAME, {\n\t\t\t\tvalue: \"pan-x pan-down\"\n\t\t\t});\n\t\t} else {\n\t\t\tObject.defineProperty(e, TOUCH_ACTION_PROPERTY_NAME, {value: \"pan-x\"});\n\t\t}\n\t} else if (canPanY) {\n\t\tif (hasPanLeftAncestor) {\n\t\t\tObject.defineProperty(e, TOUCH_ACTION_PROPERTY_NAME, {\n\t\t\t\tvalue: \"pan-y pan-left\"\n\t\t\t});\n\t\t} else if (hasPanRightAncestor) {\n\t\t\tObject.defineProperty(e, TOUCH_ACTION_PROPERTY_NAME, {\n\t\t\t\tvalue: \"pan-y pan-right\"\n\t\t\t});\n\t\t} else {\n\t\t\tObject.defineProperty(e, TOUCH_ACTION_PROPERTY_NAME, {value: \"pan-y\"});\n\t\t}\n\t} else if (hasPanUpAncestor) {\n\t\tif (hasPanLeftAncestor) {\n\t\t\tObject.defineProperty(e, TOUCH_ACTION_PROPERTY_NAME, {\n\t\t\t\tvalue: \"pan-up pan-left\"\n\t\t\t});\n\t\t} else if (hasPanRightAncestor) {\n\t\t\tObject.defineProperty(e, TOUCH_ACTION_PROPERTY_NAME, {\n\t\t\t\tvalue: \"pan-up pan-right\"\n\t\t\t});\n\t\t}\n\t} else if (hasPanDownAncestor) {\n\t\tif (hasPanLeftAncestor) {\n\t\t\tObject.defineProperty(e, TOUCH_ACTION_PROPERTY_NAME, {\n\t\t\t\tvalue: \"pan-down pan-left\"\n\t\t\t});\n\t\t} else if (hasPanRightAncestor) {\n\t\t\tObject.defineProperty(e, TOUCH_ACTION_PROPERTY_NAME, {\n\t\t\t\tvalue: \"pan-down pan-right\"\n\t\t\t});\n\t\t}\n\t} else if (hasPanLeftAncestor) {\n\t\tObject.defineProperty(e, TOUCH_ACTION_PROPERTY_NAME, {value: \"pan-left\"});\n\t} else if (hasPanRightAncestor) {\n\t\tObject.defineProperty(e, TOUCH_ACTION_PROPERTY_NAME, {\n\t\t\tvalue: \"pan-right\"\n\t\t});\n\t} else if (hasPanUpAncestor) {\n\t\tObject.defineProperty(e, TOUCH_ACTION_PROPERTY_NAME, {value: \"pan-up\"});\n\t} else if (hasPanDownAncestor) {\n\t\tObject.defineProperty(e, TOUCH_ACTION_PROPERTY_NAME, {value: \"pan-down\"});\n\t} else {\n\t\tObject.defineProperty(e, TOUCH_ACTION_PROPERTY_NAME, {value: \"auto\"});\n\t}\n}\n\n/**\n * Creates a PointerEvent based on a TouchEvent of the given type\n * @param {PointerEventType} type\n * @param {TouchEvent} e\n * @returns {PointerEvent[]}\n */\nfunction createPointerEventsForTouchOfType(type: PointerEventType, e: TouchEvent): PointerEvent[] {\n\thandleTouchAction(type, e);\n\treturn <PointerEvent[]>Array.from(e.changedTouches)\n\t\t.map(currentTouch => {\n\t\t\t// For Touch, each active pointer corresponds to a finger in direct contact with the digitizer\n\t\t\t// https://www.w3.org/TR/pointerevents/#pointerevent-interface\n\t\t\tconst pointerId = getPointerIdFromTouch(currentTouch);\n\n\t\t\tconst initOptions: IPointerEventInitRequired = {\n\t\t\t\t...(<MouseEventInit>e),\n\t\t\t\tpointerId,\n\t\t\t\tpointerType: \"touch\",\n\n\t\t\t\t// The Touch will be primary if it is the first touch of the list\n\t\t\t\t// https://www.w3.org/TR/pointerevents/#pointerevent-interface\n\t\t\t\tisPrimary: currentTouch === e.changedTouches[0],\n\n\t\t\t\tbubbles: canBubble(type, e),\n\t\t\t\tcancelable: isCancelable(type, e)\n\t\t\t};\n\n\t\t\t// Prevent the event if cancel has been fired and it isn't an event that will always be fired after pointercancel events\n\t\t\tconst shouldPreventBecauseCanceled = type !== \"pointerout\" && type !== \"pointerleave\" && pointerIdToCancelFiredSet.has(pointerId);\n\n\t\t\tif (shouldPreventBecauseCanceled) {\n\t\t\t\tif (e.cancelable && !e.defaultPrevented) {\n\t\t\t\t\te.preventDefault();\n\t\t\t\t}\n\t\t\t\t// Update the Set since this won't be invoked otherwise\n\t\t\t\tupdatePointerIdToCancelFiredSet({type, pointerId});\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\t// Define all properties of MouseEvents that should be set on the event object\n\t\t\t// noinspection JSDeprecatedSymbols\n\t\t\tconst overwrittenMouseEventProperties: {[Key in RequiredOverwrittenMouseEventProperties]: PropertyDescriptor} & {[Key in OptionalOverwrittenMouseEventProperties]?: PropertyDescriptor} = {\n\t\t\t\tscoped: {\n\t\t\t\t\tvalue: (<any>e).scoped,\n\t\t\t\t\t...SHARED_DESCRIPTOR_OPTIONS\n\t\t\t\t},\n\n\t\t\t\t// The 'fromElement' property should be set to 'null' for interoperability reasons according to the spec\n\t\t\t\t// https://www.w3.org/TR/pointerevents/#pointerevent-interface\n\t\t\t\tfromElement: {\n\t\t\t\t\tvalue: null,\n\t\t\t\t\t...SHARED_DESCRIPTOR_OPTIONS\n\t\t\t\t},\n\n\t\t\t\t// The 'toElement' property should be set to 'null' for interoperability reasons according to the spec\n\t\t\t\t// https://www.w3.org/TR/pointerevents/#pointerevent-interface\n\t\t\t\ttoElement: {\n\t\t\t\t\tvalue: null,\n\t\t\t\t\t...SHARED_DESCRIPTOR_OPTIONS\n\t\t\t\t},\n\n\t\t\t\t// The 'detail' property should always have a value of 0\n\t\t\t\t// https://www.w3.org/TR/pointerevents/#attributes-and-default-actions\n\t\t\t\tdetail: {\n\t\t\t\t\tvalue: 0,\n\t\t\t\t\t...SHARED_DESCRIPTOR_OPTIONS\n\t\t\t\t},\n\n\t\t\t\t// The 'composed' property should always have a value of true\n\t\t\t\t// https://www.w3.org/TR/pointerevents/#attributes-and-default-actions\n\t\t\t\tcomposed: {\n\t\t\t\t\tvalue: true,\n\t\t\t\t\t...SHARED_DESCRIPTOR_OPTIONS\n\t\t\t\t},\n\n\t\t\t\tcomposedPath: {\n\t\t\t\t\tvalue: () => getEventPath(e.target as Element),\n\t\t\t\t\t...SHARED_DESCRIPTOR_OPTIONS\n\t\t\t\t},\n\n\t\t\t\t...(!(\"region\" in Touch.prototype)\n\t\t\t\t\t? {}\n\t\t\t\t\t: {\n\t\t\t\t\t\t\tregion: {\n\t\t\t\t\t\t\t\tvalue: (<any>currentTouch).region,\n\t\t\t\t\t\t\t\t...SHARED_DESCRIPTOR_OPTIONS\n\t\t\t\t\t\t\t}\n\t\t\t\t\t  }),\n\n\t\t\t\t...(!(\"path\" in Event.prototype) || !isElement(currentTouch.target)\n\t\t\t\t\t? {}\n\t\t\t\t\t: {\n\t\t\t\t\t\t\tpath: {\n\t\t\t\t\t\t\t\tvalue: getEventPath(currentTouch.target),\n\t\t\t\t\t\t\t\t...SHARED_DESCRIPTOR_OPTIONS\n\t\t\t\t\t\t\t}\n\t\t\t\t\t  }),\n\n\t\t\t\t...(!(\"deepPath\" in Event.prototype) || !isElement(currentTouch.target)\n\t\t\t\t\t? {}\n\t\t\t\t\t: {\n\t\t\t\t\t\t\tpath: {\n\t\t\t\t\t\t\t\tvalue: () => getEventPath(currentTouch.target as Element),\n\t\t\t\t\t\t\t\t...SHARED_DESCRIPTOR_OPTIONS\n\t\t\t\t\t\t\t}\n\t\t\t\t\t  })\n\t\t\t};\n\n\t\t\t// Create a new PointerEvent\n\t\t\tconst clonedEvent = cloneEventAsPointerEvent({\n\t\t\t\te,\n\t\t\t\ttype,\n\t\t\t\tinitOptions,\n\t\t\t\toverwrittenMouseEventProperties,\n\t\t\t\tdynamicPropertiesHandler: () => handleDynamicPropertiesForPointerEventOnTouch(pointerId, type, currentTouch, e)\n\t\t\t});\n\t\t\toverwriteTargetsForEvent(e, clonedEvent.target, clonedEvent.currentTarget, clonedEvent.relatedTarget);\n\n\t\t\t// Store a reference to the last constructed \"pointerdown\" event\n\t\t\tif (type === \"pointerdown\") {\n\t\t\t\tLAST_POINTER_DOWN_EVENT_FOR_POINTER_ID.set(pointerId, clonedEvent);\n\t\t\t}\n\t\t\treturn clonedEvent;\n\t\t})\n\t\t.filter(ev => ev != null);\n}\n\n/**\n * Creates a PointerEvent based on a TouchEvent of the given type and invokes the listener with it\n * @param {PointerEventType} type\n * @param {TouchEvent} e\n * @param {EventTarget} eventTarget\n * @param {EventListenerOrEventListenerObject} listener\n */\nfunction createPointerEventsForTouchOfTypeAndInvoke(type: PointerEventType, e: TouchEvent, eventTarget: EventTarget, listener: EventListenerOrEventListenerObject): void {\n\tconst pointerEvents = createPointerEventsForTouchOfType(type, e);\n\t// Handle whatever needs to come before the TouchEvent\n\thandlePrePointerEventForTouch(type, eventTarget, e, pointerEvents);\n\n\tpointerEvents.forEach(clone => {\n\t\tupdatePointerIdToCancelFiredSet(clone);\n\t\t// Invoke the listener with the cloned event\n\t\tinvokeListener(clone, listener);\n\t});\n\n\t// Handle whatever needs to come after the TouchEvent\n\thandlePostPointerEventForTouch(type, eventTarget, e);\n}\n\n/**\n * Creates a PointerEvent based on a TouchEvent of the given type and dispatches an event on the event target\n * @param {PointerEventType} type\n * @param {TouchEvent} e\n * @param {EventTarget} eventTarget\n */\nexport function createPointerEventsForTouchOfTypeAndDispatch(type: PointerEventType, e: TouchEvent, eventTarget: EventTarget): void {\n\tconst pointerEvents = createPointerEventsForTouchOfType(type, e);\n\t// Handle whatever needs to come before the TouchEvent\n\thandlePrePointerEventForTouch(type, eventTarget, e, pointerEvents);\n\n\tpointerEvents.forEach(clone => {\n\t\tupdatePointerIdToCancelFiredSet(clone);\n\n\t\t// Dispatch the event on the target\n\t\teventTarget.dispatchEvent(clone);\n\t});\n\n\t// Handle whatever needs to come after the TouchEvent\n\thandlePostPointerEventForTouch(type, eventTarget, e);\n}\n\n/**\n * Handles a PointerEvent for a Touch device\n * @param {EventTarget} eventTarget\n * @param {PointerEventType} type\n * @param {TouchEvent} e\n * @param {EventListenerOrEventListenerObject} listener\n */\nexport function handlePointerEventForTouch(eventTarget: EventTarget, type: PointerEventType, e: TouchEvent, listener: EventListenerOrEventListenerObject): void {\n\tcreatePointerEventsForTouchOfTypeAndInvoke(type, e, eventTarget, listener);\n}\n","import {POINTER_ID_TO_CAPTURED_TARGET_MAP} from \"../pointer-capture\";\n\n/**\n * Gets the target for a MouseEvent\n * @param {number} pointerId\n * @param {MouseEvent} e\n * @returns {EventTarget | null}\n */\nexport function getMouseTarget(pointerId: number, e: MouseEvent): EventTarget | null {\n\tconst captured = POINTER_ID_TO_CAPTURED_TARGET_MAP.get(pointerId);\n\tif (captured !== undefined) {\n\t\treturn captured;\n\t}\n\treturn e.target;\n}\n","import {PointerEventType} from \"../pointer-event-type\";\nimport {PointerEvent} from \"../pointer-event\";\nimport {SHARED_DESCRIPTOR_OPTIONS} from \"../shared-descriptor-options\";\nimport {getPressure} from \"../touch/get-touch-properties\";\nimport {DynamicPointerEventProperty} from \"../dynamic-pointer-event-property\";\nimport {IPointerEventInitRequired} from \"../i-pointer-event-init-required\";\nimport {canBubble} from \"../can-bubble\";\nimport {isCancelable} from \"../is-cancelable\";\nimport {overwriteTargetsForEvent} from \"../overwrite-targets-for-event\";\nimport {OptionalOverwrittenMouseEventProperties, RequiredOverwrittenMouseEventProperties} from \"../overwritten-mouse-event-properties\";\nimport {cloneEventAsPointerEvent} from \"../clone-event-as-pointer-event\";\nimport {currentMousePointerId} from \"./current-mouse-pointer-id\";\nimport {updatePointerIdToCancelFiredSet} from \"../pointer-id-to-cancel-fired\";\nimport {invokeListener} from \"../invoke-listener\";\nimport {getMouseTarget} from \"./get-mouse-properties\";\nimport {POINTER_ID_TO_CAPTURED_TARGET_MAP} from \"../pointer-capture\";\nimport {isElement} from \"../is-element\";\nimport {IDisposable} from \"../i-disposable\";\nimport {getEventPath} from \"../get-event-path\";\n\n// tslint:disable:no-any\n\n/**\n * A Map between Event Targets and disposable objects\n * @type {Map<EventTarget, IDisposable>}\n */\nconst POINTER_UP_FALLBACK_LISTENER_MAP: Map<EventTarget, IDisposable> = new Map();\n\n/**\n * Dispatches a 'pointerup' event the next time a 'mouseup' event is fired on the window\n * @param {MouseEvent} e\n * @returns {IDisposable}\n */\nfunction dispatchPointerUpForPointerEventOnNextGlobalUpEvent(e: MouseEvent): IDisposable {\n\tconst {target, currentTarget} = e;\n\n\tconst dispose = () => {\n\t\twindow.removeEventListener(\"mouseup\", handler);\n\t};\n\n\tconst handler = (upEvent: MouseEvent) => {\n\t\t// Use the coordinate-specific values from the mouseup event and set it on the constructed 'pointerup' event\n\t\tconst {left, top} = isElement(currentTarget) ? currentTarget.getBoundingClientRect() : {left: 0, top: 0};\n\n\t\tcreatePointerEventsForMouseOfTypeAndDispatch(\"pointerup\", e, currentTarget!, {\n\t\t\ttarget: {\n\t\t\t\tvalue: target,\n\t\t\t\t...SHARED_DESCRIPTOR_OPTIONS\n\t\t\t},\n\n\t\t\tcurrentTarget: {\n\t\t\t\tvalue: currentTarget,\n\t\t\t\t...SHARED_DESCRIPTOR_OPTIONS\n\t\t\t},\n\n\t\t\tclientX: {\n\t\t\t\tvalue: upEvent.clientX,\n\t\t\t\t...SHARED_DESCRIPTOR_OPTIONS\n\t\t\t},\n\n\t\t\tclientY: {\n\t\t\t\tvalue: upEvent.clientY,\n\t\t\t\t...SHARED_DESCRIPTOR_OPTIONS\n\t\t\t},\n\n\t\t\tscreenX: {\n\t\t\t\tvalue: upEvent.screenX,\n\t\t\t\t...SHARED_DESCRIPTOR_OPTIONS\n\t\t\t},\n\n\t\t\tscreenY: {\n\t\t\t\tvalue: upEvent.screenY,\n\t\t\t\t...SHARED_DESCRIPTOR_OPTIONS\n\t\t\t},\n\n\t\t\tlayerX: {\n\t\t\t\tvalue: upEvent.layerX,\n\t\t\t\t...SHARED_DESCRIPTOR_OPTIONS\n\t\t\t},\n\n\t\t\tlayerY: {\n\t\t\t\tvalue: upEvent.layerY,\n\t\t\t\t...SHARED_DESCRIPTOR_OPTIONS\n\t\t\t},\n\n\t\t\tmovementX: {\n\t\t\t\tvalue: upEvent.movementX,\n\t\t\t\t...SHARED_DESCRIPTOR_OPTIONS\n\t\t\t},\n\n\t\t\tmovementY: {\n\t\t\t\tvalue: upEvent.movementY,\n\t\t\t\t...SHARED_DESCRIPTOR_OPTIONS\n\t\t\t},\n\n\t\t\toffsetX: {\n\t\t\t\tvalue: upEvent.clientX - left,\n\t\t\t\t...SHARED_DESCRIPTOR_OPTIONS\n\t\t\t},\n\n\t\t\toffsetY: {\n\t\t\t\tvalue: upEvent.clientY - top,\n\t\t\t\t...SHARED_DESCRIPTOR_OPTIONS\n\t\t\t},\n\n\t\t\tpageX: {\n\t\t\t\tvalue: upEvent.pageX,\n\t\t\t\t...SHARED_DESCRIPTOR_OPTIONS\n\t\t\t},\n\n\t\t\tpageY: {\n\t\t\t\tvalue: upEvent.pageY,\n\t\t\t\t...SHARED_DESCRIPTOR_OPTIONS\n\t\t\t},\n\n\t\t\tx: {\n\t\t\t\tvalue: upEvent.x,\n\t\t\t\t...SHARED_DESCRIPTOR_OPTIONS\n\t\t\t},\n\n\t\t\ty: {\n\t\t\t\tvalue: upEvent.y,\n\t\t\t\t...SHARED_DESCRIPTOR_OPTIONS\n\t\t\t}\n\t\t});\n\n\t\tdispose();\n\t};\n\twindow.addEventListener(\"mouseup\", handler);\n\treturn {dispose};\n}\n\n/**\n * Handles whatever logic needs to come before any given kind of MouseEvent\n * @param {PointerEventType} _pointerEventType\n * @param {EventTarget} _eventTarget\n * @param {MouseEvent} _e\n */\nfunction handlePrePointerEventForMouse(_pointerEventType: PointerEventType, _eventTarget: EventTarget, _e: MouseEvent): void {\n\t// There's nothing to do here\n}\n\n/**\n * Handles whatever logic needs to follow any given kind of MouseEvent\n * @param {PointerEventType} pointerEventType\n * @param {MouseEvent} e\n */\nfunction handlePostPointerEventForMouse(pointerEventType: PointerEventType, e: MouseEvent): void {\n\tswitch (pointerEventType) {\n\t\tcase \"pointercancel\":\n\t\tcase \"pointerup\":\n\t\t\t// Clean up after the global \"pointerup\" listener, if it exists\n\t\t\tif (e.currentTarget != null && POINTER_UP_FALLBACK_LISTENER_MAP.has(e.currentTarget)) {\n\t\t\t\tconst handler = POINTER_UP_FALLBACK_LISTENER_MAP.get(e.currentTarget)!;\n\t\t\t\t// Clear the global listener for \"mouseup\" events\n\t\t\t\thandler.dispose();\n\t\t\t\tPOINTER_UP_FALLBACK_LISTENER_MAP.delete(e.currentTarget);\n\t\t\t}\n\n\t\t\t// Immediately after pointerup or pointercancel events, a user agent MUST clear any pointer capture target overrides\n\t\t\t// https://www.w3.org/TR/pointerevents/#implicit-release-of-pointer-capture\n\t\t\tconst match = POINTER_ID_TO_CAPTURED_TARGET_MAP.get(currentMousePointerId);\n\t\t\tif (match != null && isElement(match)) {\n\t\t\t\tmatch.releasePointerCapture(currentMousePointerId);\n\t\t\t}\n\n\t\t\tbreak;\n\n\t\tcase \"pointerdown\":\n\t\t\tif (e.currentTarget != null && !POINTER_UP_FALLBACK_LISTENER_MAP.has(e.currentTarget)) {\n\t\t\t\tPOINTER_UP_FALLBACK_LISTENER_MAP.set(e.currentTarget, dispatchPointerUpForPointerEventOnNextGlobalUpEvent(e));\n\t\t\t}\n\t}\n}\n\n/**\n * Handles all those dynamic properties that are specific for pointerdown or pointerup events on Mouse devices\n * @param {number} pointerId\n * @param {string} type\n * @param {MouseEvent} e\n * @returns {{[Key in DynamicPointerEventProperty]: PropertyDescriptor}}\n */\nfunction handleDynamicPropertiesForContactMouse(\n\tpointerId: number,\n\ttype: \"pointerdown\" | \"pointermove\" | \"pointerover\" | \"pointerenter\" | \"pointerup\" | \"gotpointercapture\" | \"lostpointercapture\",\n\te: MouseEvent\n): {[Key in DynamicPointerEventProperty]: PropertyDescriptor} {\n\treturn {\n\t\ttarget: {\n\t\t\tvalue: getMouseTarget(pointerId, e),\n\t\t\t...SHARED_DESCRIPTOR_OPTIONS\n\t\t},\n\n\t\tbutton: {\n\t\t\t// If the pointer is simply over the element, no pointer contact has changed since last event.\n\t\t\t// https://www.w3.org/TR/pointerevents2/#the-button-property\n\t\t\tvalue: type === \"pointerover\" || type === \"gotpointercapture\" ? -1 : type === \"lostpointercapture\" ? 0 : e.button,\n\t\t\t...SHARED_DESCRIPTOR_OPTIONS\n\t\t},\n\n\t\tbuttons: {\n\t\t\tvalue: type === \"lostpointercapture\" ? 0 : type === \"gotpointercapture\" ? 1 : e.buttons,\n\t\t\t...SHARED_DESCRIPTOR_OPTIONS\n\t\t},\n\n\t\tclientX: {\n\t\t\tvalue: e.clientX,\n\t\t\t...SHARED_DESCRIPTOR_OPTIONS\n\t\t},\n\n\t\tclientY: {\n\t\t\tvalue: e.clientY,\n\t\t\t...SHARED_DESCRIPTOR_OPTIONS\n\t\t},\n\n\t\tscreenX: {\n\t\t\tvalue: e.screenX,\n\t\t\t...SHARED_DESCRIPTOR_OPTIONS\n\t\t},\n\n\t\tscreenY: {\n\t\t\tvalue: e.screenY,\n\t\t\t...SHARED_DESCRIPTOR_OPTIONS\n\t\t},\n\n\t\tlayerX: {\n\t\t\tvalue: e.layerX,\n\t\t\t...SHARED_DESCRIPTOR_OPTIONS\n\t\t},\n\n\t\tlayerY: {\n\t\t\tvalue: e.layerY,\n\t\t\t...SHARED_DESCRIPTOR_OPTIONS\n\t\t},\n\n\t\tmovementX: {\n\t\t\tvalue: e.movementX,\n\t\t\t...SHARED_DESCRIPTOR_OPTIONS\n\t\t},\n\n\t\tmovementY: {\n\t\t\tvalue: e.movementY,\n\t\t\t...SHARED_DESCRIPTOR_OPTIONS\n\t\t},\n\n\t\toffsetX: {\n\t\t\tvalue: e.offsetX,\n\t\t\t...SHARED_DESCRIPTOR_OPTIONS\n\t\t},\n\n\t\toffsetY: {\n\t\t\tvalue: e.offsetY,\n\t\t\t...SHARED_DESCRIPTOR_OPTIONS\n\t\t},\n\n\t\tpageX: {\n\t\t\tvalue: e.pageX,\n\t\t\t...SHARED_DESCRIPTOR_OPTIONS\n\t\t},\n\n\t\tpageY: {\n\t\t\tvalue: e.pageY,\n\t\t\t...SHARED_DESCRIPTOR_OPTIONS\n\t\t},\n\n\t\tx: {\n\t\t\tvalue: e.x,\n\t\t\t...SHARED_DESCRIPTOR_OPTIONS\n\t\t},\n\n\t\ty: {\n\t\t\tvalue: e.y,\n\t\t\t...SHARED_DESCRIPTOR_OPTIONS\n\t\t},\n\n\t\t// For everything other than pointerover/pointerleave/pointerout/pointerenter, the related target should be null\n\t\t// https://www.w3.org/TR/pointerevents2/\n\t\trelatedTarget: {\n\t\t\tvalue: null,\n\t\t\t...SHARED_DESCRIPTOR_OPTIONS\n\t\t},\n\t\t// The width and height of active mouse and pen pointers are always equal to 1\n\t\t// https://www.w3.org/TR/pointerevents/#pointerevent-interface\n\t\twidth: {\n\t\t\tvalue: 1,\n\t\t\t...SHARED_DESCRIPTOR_OPTIONS\n\t\t},\n\t\theight: {\n\t\t\tvalue: 1,\n\t\t\t...SHARED_DESCRIPTOR_OPTIONS\n\t\t},\n\n\t\t// if the device doesn't support pressure (mice and pens doesn't), the pressure is always 0.5 except for \"up\" events (which is zero)\n\t\t// https://www.w3.org/TR/pointerevents/#pointerevent-interface\n\t\tpressure: {\n\t\t\tvalue: getPressure(type, e),\n\t\t\t...SHARED_DESCRIPTOR_OPTIONS\n\t\t},\n\n\t\t// if the device doesn't support tangential pressure (mice and pens doesn't), the value is always 0\n\t\t// https://www.w3.org/TR/pointerevents/#pointerevent-interface\n\t\ttangentialPressure: {\n\t\t\tvalue: 0,\n\t\t\t...SHARED_DESCRIPTOR_OPTIONS\n\t\t},\n\n\t\t// Mouse pointers doesn't support tilt. Default to values of zero\n\t\t// https://www.w3.org/TR/pointerevents/#pointerevent-interface\n\t\ttiltX: {\n\t\t\tvalue: 0,\n\t\t\t...SHARED_DESCRIPTOR_OPTIONS\n\t\t},\n\t\ttiltY: {\n\t\t\tvalue: 0,\n\t\t\t...SHARED_DESCRIPTOR_OPTIONS\n\t\t},\n\n\t\t// Mouse pointers doesn't support twist. Default to values of zero\n\t\t// https://www.w3.org/TR/pointerevents/#pointerevent-interface\n\t\ttwist: {\n\t\t\tvalue: 0,\n\t\t\t...SHARED_DESCRIPTOR_OPTIONS\n\t\t}\n\t};\n}\n\n/**\n * Handles all those dynamic properties that are specific for pointerout or pointerleave events on Mouse devices\n * @param {number} pointerId\n * @param {MouseEvent} e\n * @returns {{[Key in DynamicPointerEventProperty]: PropertyDescriptor}}\n */\nfunction handleDynamicPropertiesForNoContactMouse(pointerId: number, e: MouseEvent): {[Key in DynamicPointerEventProperty]: PropertyDescriptor} {\n\treturn {\n\t\ttarget: {\n\t\t\tvalue: getMouseTarget(pointerId, e),\n\t\t\t...SHARED_DESCRIPTOR_OPTIONS\n\t\t},\n\n\t\tbutton: {\n\t\t\tvalue: e.button,\n\t\t\t...SHARED_DESCRIPTOR_OPTIONS\n\t\t},\n\n\t\tbuttons: {\n\t\t\tvalue: e.buttons,\n\t\t\t...SHARED_DESCRIPTOR_OPTIONS\n\t\t},\n\n\t\tclientX: {\n\t\t\tvalue: e.clientX,\n\t\t\t...SHARED_DESCRIPTOR_OPTIONS\n\t\t},\n\n\t\tclientY: {\n\t\t\tvalue: e.clientY,\n\t\t\t...SHARED_DESCRIPTOR_OPTIONS\n\t\t},\n\n\t\tscreenX: {\n\t\t\tvalue: e.screenX,\n\t\t\t...SHARED_DESCRIPTOR_OPTIONS\n\t\t},\n\n\t\tscreenY: {\n\t\t\tvalue: e.screenY,\n\t\t\t...SHARED_DESCRIPTOR_OPTIONS\n\t\t},\n\n\t\tlayerX: {\n\t\t\tvalue: e.layerX,\n\t\t\t...SHARED_DESCRIPTOR_OPTIONS\n\t\t},\n\n\t\tlayerY: {\n\t\t\tvalue: e.layerY,\n\t\t\t...SHARED_DESCRIPTOR_OPTIONS\n\t\t},\n\n\t\tmovementX: {\n\t\t\tvalue: e.movementX,\n\t\t\t...SHARED_DESCRIPTOR_OPTIONS\n\t\t},\n\n\t\tmovementY: {\n\t\t\tvalue: e.movementY,\n\t\t\t...SHARED_DESCRIPTOR_OPTIONS\n\t\t},\n\n\t\toffsetX: {\n\t\t\tvalue: e.offsetX,\n\t\t\t...SHARED_DESCRIPTOR_OPTIONS\n\t\t},\n\n\t\toffsetY: {\n\t\t\tvalue: e.offsetY,\n\t\t\t...SHARED_DESCRIPTOR_OPTIONS\n\t\t},\n\n\t\tpageX: {\n\t\t\tvalue: e.pageX,\n\t\t\t...SHARED_DESCRIPTOR_OPTIONS\n\t\t},\n\n\t\tpageY: {\n\t\t\tvalue: e.pageY,\n\t\t\t...SHARED_DESCRIPTOR_OPTIONS\n\t\t},\n\n\t\tx: {\n\t\t\tvalue: e.x,\n\t\t\t...SHARED_DESCRIPTOR_OPTIONS\n\t\t},\n\n\t\ty: {\n\t\t\tvalue: e.y,\n\t\t\t...SHARED_DESCRIPTOR_OPTIONS\n\t\t},\n\n\t\trelatedTarget: {\n\t\t\tvalue: e.relatedTarget,\n\t\t\t...SHARED_DESCRIPTOR_OPTIONS\n\t\t},\n\t\t// The width and height of active mouse and pen pointers are always equal to 1\n\t\t// https://www.w3.org/TR/pointerevents/#pointerevent-interface\n\t\twidth: {\n\t\t\tvalue: 1,\n\t\t\t...SHARED_DESCRIPTOR_OPTIONS\n\t\t},\n\t\theight: {\n\t\t\tvalue: 1,\n\t\t\t...SHARED_DESCRIPTOR_OPTIONS\n\t\t},\n\n\t\t// if the device doesn't support pressure (mice and pens doesn't), the pressure is always 0.5 except for \"up\" events (which is zero)\n\t\t// https://www.w3.org/TR/pointerevents/#pointerevent-interface\n\t\tpressure: {\n\t\t\tvalue: getPressure(\"pointerout\", e),\n\t\t\t...SHARED_DESCRIPTOR_OPTIONS\n\t\t},\n\n\t\t// if the device doesn't support tangential pressure (mice and pens doesn't), the value is always 0\n\t\t// https://www.w3.org/TR/pointerevents/#pointerevent-interface\n\t\ttangentialPressure: {\n\t\t\tvalue: 0,\n\t\t\t...SHARED_DESCRIPTOR_OPTIONS\n\t\t},\n\n\t\t// Mouse pointers doesn't support tilt. Default to values of zero\n\t\t// https://www.w3.org/TR/pointerevents/#pointerevent-interface\n\t\ttiltX: {\n\t\t\tvalue: 0,\n\t\t\t...SHARED_DESCRIPTOR_OPTIONS\n\t\t},\n\t\ttiltY: {\n\t\t\tvalue: 0,\n\t\t\t...SHARED_DESCRIPTOR_OPTIONS\n\t\t},\n\n\t\t// Mouse pointers doesn't support twist. Default to values of zero\n\t\t// https://www.w3.org/TR/pointerevents/#pointerevent-interface\n\t\ttwist: {\n\t\t\tvalue: 0,\n\t\t\t...SHARED_DESCRIPTOR_OPTIONS\n\t\t}\n\t};\n}\n\n/**\n * Handles all those dynamic properties that are specific for a specific PointerEvent type on Mouse devices\n * @param {number} pointerId\n * @param {PointerEventType} type\n * @param {MouseEvent} e\n * @returns {{[Key in DynamicPointerEventProperty]: PropertyDescriptor}}\n */\nfunction handleDynamicPropertiesForPointerEventOnMouse(pointerId: number, type: PointerEventType, e: MouseEvent): {[Key in DynamicPointerEventProperty]: PropertyDescriptor} {\n\tswitch (type) {\n\t\tcase \"pointerdown\":\n\t\tcase \"pointermove\":\n\t\tcase \"pointerup\":\n\t\tcase \"pointerover\":\n\t\tcase \"pointerenter\":\n\t\tcase \"gotpointercapture\":\n\t\tcase \"lostpointercapture\":\n\t\t\treturn handleDynamicPropertiesForContactMouse(pointerId, type, e);\n\n\t\tcase \"pointerout\":\n\t\tcase \"pointerleave\":\n\t\tcase \"pointercancel\":\n\t\t\treturn handleDynamicPropertiesForNoContactMouse(pointerId, e);\n\n\t\tdefault:\n\t\t\tthrow new TypeError(`Error: Could not handle dynamic properties for a PointerEvent of type: '${type}'`);\n\t}\n}\n\n/**\n * Creates a PointerEvent based on a MouseEvent of the given type\n * @param {PointerEventType} type\n * @param {MouseEvent} e\n * @returns {PointerEvent[]}\n */\nfunction createPointerEventsForMouseOfType(type: PointerEventType, e: MouseEvent): PointerEvent[] {\n\tconst pointerId = currentMousePointerId;\n\n\tconst initOptions: IPointerEventInitRequired = {\n\t\t...(<MouseEventInit>e),\n\n\t\t// Mice are always active pointers, so their pointer ids won't increment\n\t\t// https://www.w3.org/TR/pointerevents/#pointerevent-interface\n\t\tpointerId,\n\t\tpointerType: \"mouse\",\n\n\t\t// Mouse pointers are always active and always considered primary, even if multiple mouse devices are connected\n\t\t// https://www.w3.org/TR/pointerevents/#pointerevent-interface\n\t\tisPrimary: true,\n\n\t\tbubbles: canBubble(type, e),\n\t\tcancelable: isCancelable(type, e)\n\t};\n\n\t// Prevent the event if the pointer id is currently being caught by an EventTarget\n\tconst shouldPreventBecausePointerCapture = (type === \"pointerout\" || type === \"pointerleave\") && POINTER_ID_TO_CAPTURED_TARGET_MAP.has(pointerId);\n\n\tif (shouldPreventBecausePointerCapture) {\n\t\tif (e.cancelable && !e.defaultPrevented) {\n\t\t\te.preventDefault();\n\t\t}\n\t\treturn [];\n\t}\n\n\t// Define all properties of MouseEvents that should be set on the event object\n\t// noinspection JSDeprecatedSymbols\n\tconst overwrittenMouseEventProperties: {[Key in RequiredOverwrittenMouseEventProperties]: PropertyDescriptor} & {[Key in OptionalOverwrittenMouseEventProperties]?: PropertyDescriptor} = {\n\t\tscoped: {\n\t\t\tvalue: (<any>e).scoped,\n\t\t\t...SHARED_DESCRIPTOR_OPTIONS\n\t\t},\n\n\t\t// The 'fromElement' property should be set to 'null' for interoperability reasons according to the spec\n\t\t// https://www.w3.org/TR/pointerevents/#pointerevent-interface\n\t\tfromElement: {\n\t\t\tvalue: null,\n\t\t\t...SHARED_DESCRIPTOR_OPTIONS\n\t\t},\n\n\t\t// The 'toElement' property should be set to 'null' for interoperability reasons according to the spec\n\t\t// https://www.w3.org/TR/pointerevents/#pointerevent-interface\n\t\ttoElement: {\n\t\t\tvalue: null,\n\t\t\t...SHARED_DESCRIPTOR_OPTIONS\n\t\t},\n\n\t\t// The 'detail' property should always have a value of 0\n\t\t// https://www.w3.org/TR/pointerevents/#attributes-and-default-actions\n\t\tdetail: {\n\t\t\tvalue: 0,\n\t\t\t...SHARED_DESCRIPTOR_OPTIONS\n\t\t},\n\n\t\t// The 'composed' property should always have a value of true\n\t\t// https://www.w3.org/TR/pointerevents/#attributes-and-default-actions\n\t\tcomposed: {\n\t\t\tvalue: true,\n\t\t\t...SHARED_DESCRIPTOR_OPTIONS\n\t\t},\n\n\t\tcomposedPath: {\n\t\t\tvalue: () => getEventPath(e.target as Element),\n\t\t\t...SHARED_DESCRIPTOR_OPTIONS\n\t\t},\n\n\t\t...(!(\"region\" in MouseEvent.prototype)\n\t\t\t? {}\n\t\t\t: {\n\t\t\t\t\tregion: {\n\t\t\t\t\t\tvalue: (<any>e).region,\n\t\t\t\t\t\t...SHARED_DESCRIPTOR_OPTIONS\n\t\t\t\t\t}\n\t\t\t  }),\n\n\t\t...(!(\"path\" in e)\n\t\t\t? {}\n\t\t\t: {\n\t\t\t\t\tpath: {\n\t\t\t\t\t\t// Touch contact are indicated by the button value 0\n\t\t\t\t\t\tvalue: (<any>e).path,\n\t\t\t\t\t\t...SHARED_DESCRIPTOR_OPTIONS\n\t\t\t\t\t}\n\t\t\t  }),\n\n\t\t...(!(\"deepPath\" in Event.prototype) || !isElement(e.target)\n\t\t\t? {}\n\t\t\t: {\n\t\t\t\t\tpath: {\n\t\t\t\t\t\tvalue: () => getEventPath(e.target as Element),\n\t\t\t\t\t\t...SHARED_DESCRIPTOR_OPTIONS\n\t\t\t\t\t}\n\t\t\t  })\n\t};\n\n\t// Create a new PointerEvent\n\tconst clonedEvent = cloneEventAsPointerEvent({\n\t\te,\n\t\ttype,\n\t\tinitOptions,\n\t\toverwrittenMouseEventProperties,\n\t\tdynamicPropertiesHandler: () => handleDynamicPropertiesForPointerEventOnMouse(pointerId, type, e)\n\t});\n\toverwriteTargetsForEvent(e, clonedEvent.target, clonedEvent.currentTarget, clonedEvent.relatedTarget);\n\treturn [clonedEvent];\n}\n\n/**\n * Creates a PointerEvent based on a TouchEvent of the given type and dispatches an event on the event target\n * @param {PointerEventType} type\n * @param {TouchEvent} e\n * @param {EventTarget} eventTarget\n * @param {PropertyDescriptorMap} [extraDescriptors]\n */\nexport function createPointerEventsForMouseOfTypeAndDispatch(type: PointerEventType, e: MouseEvent, eventTarget: EventTarget, extraDescriptors?: PropertyDescriptorMap): void {\n\tconst pointerEvents = createPointerEventsForMouseOfType(type, e);\n\t// Handle whatever needs to come before the MouseEvent\n\thandlePrePointerEventForMouse(type, eventTarget, e);\n\n\tpointerEvents.forEach(clone => {\n\t\tif (extraDescriptors != null) {\n\t\t\tObject.defineProperties(clone, extraDescriptors);\n\t\t}\n\n\t\tupdatePointerIdToCancelFiredSet(clone);\n\n\t\t// Dispatch the event on the target\n\t\teventTarget.dispatchEvent(clone);\n\t});\n\n\t// Handle whatever needs to come after the MouseEvent\n\thandlePostPointerEventForMouse(type, e);\n}\n\n/**\n * Creates a PointerEvent based on a MouseEvent of the given type and invokes the listener with it\n * @param {PointerEventType} type\n * @param {MouseEvent} e\n * @param {EventTarget} eventTarget\n * @param {EventListenerOrEventListenerObject} listener\n */\nfunction createPointerEventsForMouseOfTypeAndInvoke(type: PointerEventType, e: MouseEvent, eventTarget: EventTarget, listener: EventListenerOrEventListenerObject): void {\n\t// Handle whatever needs to come before the MouseEvent\n\thandlePrePointerEventForMouse(type, eventTarget, e);\n\tconst pointerEvents = createPointerEventsForMouseOfType(type, e);\n\n\tpointerEvents.forEach(clone => {\n\t\tupdatePointerIdToCancelFiredSet(clone);\n\n\t\t// Invoke the listener with the cloned event\n\t\tinvokeListener(clone, listener);\n\t});\n\n\t// Handle whatever needs to come after the MouseEvent\n\thandlePostPointerEventForMouse(type, e);\n}\n\n/**\n * Handles a PointerEvent related to a MouseEvent\n * @param {EventTarget} eventTarget\n * @param {PointerEventType} type\n * @param {MouseEvent} e\n * @param {EventListenerOrEventListenerObject} listener\n */\nexport function handlePointerEventForMouse(eventTarget: EventTarget, type: PointerEventType, e: MouseEvent, listener: EventListenerOrEventListenerObject): void {\n\tcreatePointerEventsForMouseOfTypeAndInvoke(type, e, eventTarget, listener);\n}\n","export const boundHandlerMap: Map<EventListenerOrEventListenerObject, Set<Function>> = new Map();\n\n/**\n * Adds a bound handler\n * @param {EventListenerOrEventListenerObject} listener\n * @param {Function} handler\n */\nexport function addBoundHandler(listener: EventListenerOrEventListenerObject, handler: Function): void {\n\tlet set = boundHandlerMap.get(listener);\n\tif (set == null) {\n\t\tset = new Set();\n\t\tboundHandlerMap.set(listener, set);\n\t}\n\tset.add(handler);\n}\n","/**\n * Checks if the user agent already supports the PointerEvent constructor\n * @type {boolean}\n */\nexport const SUPPORTS_POINTER_EVENTS = \"PointerEvent\" in window;\n","import {PointerEvent} from \"../../pointer-event\";\nimport {isPointerEventType} from \"../../is-pointer-event-type\";\nimport {convertPointerEventType} from \"../../convert-pointer-event-type\";\nimport {handlePointerEventForTouch} from \"../../touch/touch-handler\";\nimport {handlePointerEventForMouse} from \"../../mouse/mouse-handler\";\nimport {invokeListener} from \"../../invoke-listener\";\nimport {addBoundHandler} from \"../../bound-handler\";\nimport {SUPPORTS_POINTER_EVENTS} from \"../window/pointer-event-check\";\n\nif (!SUPPORTS_POINTER_EVENTS) {\n\t// Keep a reference to the original addEventListener prototype method\n\tconst originalAddEventListener = EventTarget.prototype.addEventListener;\n\n\t/**\n\t * Overwrite it such that we can add special handling for PointerEvents\n\t * @param {string} type\n\t * @param {EventListenerOrEventListenerObject | null} listener\n\t * @param {boolean | AddEventListenerOptions} options\n\t */\n\tEventTarget.prototype.addEventListener = function(type: string, listener: EventListenerOrEventListenerObject | null, options?: boolean | AddEventListenerOptions): void {\n\t\tif (listener == null) {\n\t\t\treturn originalAddEventListener(type, listener, options);\n\t\t}\n\n\t\tif (isPointerEventType(type)) {\n\t\t\tconst convertedEventType = convertPointerEventType(type);\n\n\t\t\tconst handler = (e: MouseEvent | TouchEvent) => (\"changedTouches\" in e ? handlePointerEventForTouch(this, type, e, listener) : handlePointerEventForMouse(this, type, e, listener));\n\n\t\t\tconst firedPointerEventsHandler = (e: PointerEvent) => {\n\t\t\t\t// Only call the listener if the PointerEvent is **NOT** trusted\n\t\t\t\t// This is to ensure that no duplicate events are fired in browsers that natively supports PointerEvents, but where this polyfill is force-applied anyway\n\t\t\t\tif (!e.isTrusted) {\n\t\t\t\t\tinvokeListener(e, listener);\n\t\t\t\t}\n\t\t\t};\n\t\t\tif (convertedEventType != null) {\n\t\t\t\toriginalAddEventListener.call(this, convertedEventType, handler, options);\n\t\t\t\t// Add the original listener to the bound handler Map mapped to the 'handler' function so that we can\n\t\t\t\t// remove the listener at a later point\n\t\t\t\taddBoundHandler(listener, handler);\n\t\t\t}\n\n\t\t\t// Also add a listener for the pointer event name since these may be fired on the node as well\n\t\t\toriginalAddEventListener.call(this, type, firedPointerEventsHandler, options);\n\n\t\t\t// Add the original listener to the bound handler Map mapped to the 'firedPointerEventsHandler' function so that we can\n\t\t\t// remove the listener at a later point\n\t\t\taddBoundHandler(listener, firedPointerEventsHandler);\n\t\t} else {\n\t\t\toriginalAddEventListener.call(this, type, listener, options);\n\t\t}\n\t};\n}\n","import {boundHandlerMap} from \"../../bound-handler\";\nimport {SUPPORTS_POINTER_EVENTS} from \"../window/pointer-event-check\";\nimport {isPointerEventType} from \"../../is-pointer-event-type\";\nimport {convertPointerEventType} from \"../../convert-pointer-event-type\";\n\nif (!SUPPORTS_POINTER_EVENTS) {\n\t// Keep a reference to the original removeEventListener prototype method\n\tconst originalRemoveEventListener = EventTarget.prototype.removeEventListener;\n\n\t/**\n\t * Overwrite the removeEventListener prototype method such that we can provide special handling\n\t * for PointerEvents\n\t * @param {string} type\n\t * @param {EventListenerOrEventListenerObject | null} listener\n\t * @param {EventListenerOptions | boolean} options\n\t */\n\tEventTarget.prototype.removeEventListener = function(type: string, listener?: EventListenerOrEventListenerObject | null, options?: EventListenerOptions | boolean): void {\n\t\tconst convertedEventType = isPointerEventType(type) ? convertPointerEventType(type) : undefined;\n\n\t\tif (listener == null) {\n\t\t\toriginalRemoveEventListener.call(this, type, null, options);\n\t\t\tif (convertedEventType != null) {\n\t\t\t\toriginalRemoveEventListener.call(this, convertedEventType, null, options);\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\n\t\tconst boundHandlers = boundHandlerMap.get(listener);\n\t\tif (boundHandlers != null) {\n\t\t\tboundHandlers.forEach(handler => {\n\t\t\t\toriginalRemoveEventListener.call(this, type, handler as EventListener, options);\n\n\t\t\t\tif (convertedEventType != null) {\n\t\t\t\t\toriginalRemoveEventListener.call(this, convertedEventType, handler as EventListener, options);\n\t\t\t\t}\n\t\t\t});\n\t\t\tboundHandlerMap.delete(listener);\n\t\t} else {\n\t\t\toriginalRemoveEventListener.call(this, type, listener, options);\n\t\t\tif (convertedEventType != null) {\n\t\t\t\toriginalRemoveEventListener.call(this, convertedEventType, listener, options);\n\t\t\t}\n\t\t}\n\t};\n}\n","// tslint:disable:no-any\n\nimport {SUPPORTS_POINTER_EVENT_HANDLERS} from \"./global-event-handlers-check\";\n\n// Only patch the dispatchEvent EventTarget prototype method if the user agent\n// doesn't already support Global Event Handlers for Pointer Events\nif (!SUPPORTS_POINTER_EVENT_HANDLERS) {\n\t// Add EventHandlers such that \"in\" checks return true\n\t(<any>EventTarget).prototype.ongotpointercapture = null;\n\t(<any>EventTarget).prototype.onlostpointercapture = null;\n\t(<any>EventTarget).prototype.onpointerdown = null;\n\t(<any>EventTarget).prototype.onpointermove = null;\n\t(<any>EventTarget).prototype.onpointerup = null;\n\t(<any>EventTarget).prototype.onpointercancel = null;\n\t(<any>EventTarget).prototype.onpointerover = null;\n\t(<any>EventTarget).prototype.onpointerout = null;\n\t(<any>EventTarget).prototype.onpointerenter = null;\n\t(<any>EventTarget).prototype.onpointerleave = null;\n}\n","// tslint:disable:no-any\nlet hasPointerLock: boolean = false;\nexport const HAS_POINTER_LOCK = () => hasPointerLock;\n\n/**\n * Invoked when a \"pointerlockchange\" event is fired. Is used to\n * update the value of 'hasPointerLock'\n */\nconst handler = () => {\n\thasPointerLock = (document as any).pointerLockElement != null && (document as any).mozPointerLockElement != null;\n};\n\n// Listen for PointerLock events\ndocument.addEventListener(\"pointerlockchange\", handler);\ndocument.addEventListener(\"mozpointerlockchange\", handler);\n","/**\n * Throws a DOMException if possible, otherwise it falls back to throwing a regular error\n * @param {string} message\n * @param {string} name\n */\nexport function throwDOMException(message?: string, name?: string): void {\n\tlet exception: DOMException | Error;\n\ttry {\n\t\texception = new DOMException(message, name);\n\t} catch (ex) {\n\t\texception = new Error(`${name}: ${message}`);\n\t\tif (name != null) {\n\t\t\texception.name = name;\n\t\t}\n\t}\n\n\tthrow exception;\n}\n","import {POINTER_ID_TO_CAPTURED_TARGET_MAP} from \"../../pointer-capture\";\nimport {HAS_POINTER_LOCK} from \"../../pointer-lock\";\nimport {isTouchDevice} from \"../../is-touch-device\";\nimport {createPointerEventsForTouchOfTypeAndDispatch} from \"../../touch/touch-handler\";\nimport {createPointerEventsForMouseOfTypeAndDispatch} from \"../../mouse/mouse-handler\";\nimport {SUPPORTS_POINTER_EVENTS} from \"../window/pointer-event-check\";\nimport {SEEN_POINTER_IDS} from \"../../seen-pointer-ids\";\nimport {throwDOMException} from \"../../throw-dom-exception\";\n\nif (!SUPPORTS_POINTER_EVENTS) {\n\t/**\n\t * Sets pointer capture for the pointer identified by the argument pointerId to the element on which\n\t * this method is invoked\n\t * https://www.w3.org/TR/pointerevents/#extensions-to-the-element-interface\n\t * @param {number} pointerId\n\t */\n\tElement.prototype.setPointerCapture = function(pointerId: number): void {\n\t\t// If no active pointer exists with the given pointer id, throw a DOMException\n\t\t// with name 'InvalidPointerId'\n\t\t// https://www.w3.org/TR/pointerevents/#setting-pointer-capture\n\t\tif (!SEEN_POINTER_IDS.has(pointerId)) {\n\t\t\tthrowDOMException(`Could not set pointer capture on an element: No active pointers exist with the given pointer id: '${pointerId}'`, \"InvalidPointerId\");\n\t\t}\n\n\t\t// If the element is not connected, throw an InvalidStateError\n\t\t// https://www.w3.org/TR/pointerevents/#setting-pointer-capture\n\t\tif (!this.isConnected) {\n\t\t\tthrowDOMException(`Could not set pointer capture on an element: It wasn't connected!`, \"InvalidStateError\");\n\t\t}\n\n\t\tif (HAS_POINTER_LOCK()) {\n\t\t\tthrowDOMException(`Could not set pointer capture on an element: The document had a PointerLock!`, \"InvalidStateError\");\n\t\t}\n\n\t\t// Otherwise, mark the pointer id as captured by this element\n\t\tPOINTER_ID_TO_CAPTURED_TARGET_MAP.set(pointerId, this);\n\n\t\tisTouchDevice\n\t\t\t? createPointerEventsForTouchOfTypeAndDispatch(\"gotpointercapture\", new TouchEvent(\"\"), this)\n\t\t\t: createPointerEventsForMouseOfTypeAndDispatch(\"gotpointercapture\", new MouseEvent(\"\"), this);\n\t};\n}\n","import {POINTER_ID_TO_CAPTURED_TARGET_MAP} from \"../../pointer-capture\";\nimport {isTouchDevice} from \"../../is-touch-device\";\nimport {createPointerEventsForTouchOfTypeAndDispatch} from \"../../touch/touch-handler\";\nimport {createPointerEventsForMouseOfTypeAndDispatch} from \"../../mouse/mouse-handler\";\nimport {SUPPORTS_POINTER_EVENTS} from \"../window/pointer-event-check\";\nimport {SEEN_POINTER_IDS} from \"../../seen-pointer-ids\";\nimport {throwDOMException} from \"../../throw-dom-exception\";\n\nif (!SUPPORTS_POINTER_EVENTS) {\n\t/**\n\t * Releases pointer capture for the pointer identified by the argument pointerId to the element on which\n\t * this method is invoked\n\t * https://www.w3.org/TR/pointerevents/#extensions-to-the-element-interface\n\t * @param {number} pointerId\n\t */\n\tElement.prototype.releasePointerCapture = function(pointerId: number): void {\n\t\t// If no active pointer exists with the given pointer id, throw a DOMException\n\t\t// with name 'InvalidPointerId'\n\t\t// https://www.w3.org/TR/pointerevents/#setting-pointer-capture\n\t\tif (!SEEN_POINTER_IDS.has(pointerId)) {\n\t\t\tthrowDOMException(`Could not release pointer capture on an element: No active pointers exist with the given pointer id: '${pointerId}'`, \"InvalidPointerId\");\n\t\t}\n\n\t\t// Otherwise, mark the pointer id as captured by this element\n\t\tPOINTER_ID_TO_CAPTURED_TARGET_MAP.delete(pointerId);\n\n\t\tisTouchDevice\n\t\t\t? createPointerEventsForTouchOfTypeAndDispatch(\"lostpointercapture\", new TouchEvent(\"\"), this)\n\t\t\t: createPointerEventsForMouseOfTypeAndDispatch(\"lostpointercapture\", new MouseEvent(\"\"), this);\n\t};\n}\n","import {POINTER_ID_TO_CAPTURED_TARGET_MAP} from \"../../pointer-capture\";\nimport {SUPPORTS_POINTER_EVENTS} from \"../window/pointer-event-check\";\n\n// tslint:disable:no-any\n\nif (!SUPPORTS_POINTER_EVENTS) {\n\t/**\n\t * Checks if the element has pointer capture for the pointer identified by the argument pointerId\n\t * https://www.w3.org/TR/pointerevents/#extensions-to-the-element-interface\n\t * @param {number} pointerId\n\t */\n\t(<any>Element).prototype.hasPointerCapture = function(pointerId: number): boolean {\n\t\treturn POINTER_ID_TO_CAPTURED_TARGET_MAP.get(pointerId) != null;\n\t};\n}\n","import {PointerEvent} from \"../../pointer-event\";\nimport {SUPPORTS_POINTER_EVENTS} from \"./pointer-event-check\";\n\n// tslint:disable:no-any\n\n// Only patch the window object if it doesn't already have a PointerEvent constructor\nif (!SUPPORTS_POINTER_EVENTS) {\n\t// Set the PointerEvent reference on the window object\n\t(<any>window).PointerEvent = PointerEvent;\n}\n"],"names":["tslib_1.__spread"],"mappings":"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"}